%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.0%%For: (Julien Grondin) ()%%Title: (house.eps)%%CreationDate: 5/18/08 10:20 AM%%BoundingBox: 78 195 721 603%%HiResBoundingBox: 78.603 195.8301 720.7627 602.0405%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0.74902 0.678431 0.670588 0.901961 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 400.5 399.5 400.5 399.5%AI3_TileBox: 120.5 20 679.5 803%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 800 800%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -459 943 1 1923 1167 18 0 0 6 42 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 84 8%%BeginData: 12158 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD21FFCFFD43FFCFFD3AFFA8CFAEFD41FFAEADA7CFA7FD37FFCFAD%CFADCFAEFD3EFFCFA6CEADADA6CECFFD34FFA7ADA7CFA7ADA7ADA7FD3BFF%A7ACA6ADA6AC81A6A7FD0BFFCFFD26FFCFCEADCEADCEA7CEADADA6CFFD39%FFCFA6ADA6ADA6ACA6A6A7FD07FFCFCFCFCEFD26FFCFA6ADA6CEA7ADA6AD%A6AC82ACA7FD37FFA7A682A682AC81AC8181A7FD05FFA7ACA6ADA6CFFD25%FFA7ADADADA7CEADADA6ADA6ACA6ACA6CFFD35FFCF81AC81AC81AC81AC81%A6FD04FF82ACA6ADA6ADADFD25FFAD82ADA6A6A6ADA6ACA6ACA6A681A681%AEFD34FFCFA681A68182818181827BAEFFFF818181AC81A681CFFD25FFA7%ACA6ADA6ADADADA6ADA6ACA6ACA6AC81CFFD16FFADFD1DFFA78181A68182%8182818182FFA78181AC81A682ACCFFD25FFAD81ADA6AC81ADA6AC82ACA6%A681AC81A681AEFD10FFCFCFA7CFA7ADA7FD1DFF82817B82818157817B82%A88281817B82818182FD26FFADACA6ACA6AC81ADA6ACA6ACA6AC81AC82A6%81CFFD0DFFCFA7ADA7ADA7CFADCEFD1EFF82817B828181578182CF7B827B%82818281CFFD26FFAD81A681AC81A681AC82A681A681A681A681817BFD0B%FFA8AD82A6A6ADA6ADA6ADA6FD1FFF827B567B57575082A77B5781578157%AEFD27FFAEABA6ACA6ACA6AC81ACA6ACA6AC81AC82A68182A7FD09FFAEAC%A5ACA6ADA6ADA7ADADADCFFD1FFFAEA77C82578382A75757578182FD2AFF%81A681A681A681A681A681AC81A681A681828181A8FD07FFA78181ACA6AC%A6ADA6ACA6ADA6CFFD22FFCFFFFFFF7CAEA7AEA8FD2BFFAC81A681AC82A6%81AC81A681AC82A681A681A67BA7FD06FFA7A681AC81ACA6ACA6ADA6ADA6%ACCFFD25FFA8FD30FFA781818281A6818281A681817BA681828182818157%FD05FFA88181A681A681ACA6A681AC82A681FD1FFFA8A852A8A8FFFD05A8%FD2EFF81A681AC81A681A681A681A6818281A681A68181A7FD04FFA681AC%82AC81ACA6AC81ACA6ACA5ACFD1EFFA8A85252527DA8FFA8FFA8FFA8FD2D%FFCF808281A68182818281817B827B818182818157A7FFFFFFAD7B8281A6%81A681A681A681A681A582FD1DFFA87D27522752277D7DFD04A8FD2FFFAC%81A681A681828182818281A6828281A681817BFFFFFF818281A681AC8182%81A681A681AC81CFFD1CFF7D7D5252277D525227527DA8A8FD30FFA8817A%817B827B817B817B8157827C7B57827B7BA8FFA7817B8281817B81818281%82818281A5CFFD19FFA8A85252275252A8A8A85252275252A8A8FD30FFCF%817BA68182818281827B827B828282818257FFFFA77BA681827B82818281%A681A68181A7FD1AFFA8FD04527DFD05FF7D52525227A8FD31FFAE815682%7B8157817B81578157817C817B7BA8FF7C817B8157817B8281817B828181%82FD19FFA87D275227527DFFA8FFA8FFFFFF7D522752277DA8FD31FF8256%8181827B827B8157825782828157CFFF8281827B827B827B828182818182%FD19FF7D7D5252277DA8FFA8FFA8FFA8FFFFFFA87D27522752A8FD31FFA7%575757815781577B577B577C7C57A8FF7B8157815781578157817B7B7BFD%19FF7D522752527DA8FFA8A8A8FFA8FFA8FFA8FFA8A8522727527DFD32FF%8281568157815781577B508258FFFF82578257827B827B82578182FD19FF%A87D275252A8A8FFA8FFA859A8FFA87DA8FFA8FFFFFF7D52277DA8FD32FF%AEA77C7B5757515751577CA783FF57572C57565756575682A8FD1BFF7D7D%7DFFFD06A8277DFFA8277DFD05A8FF7D7D7DFD36FFCFFFAEFFA8FFFFFFCF%82A8A77D83577C578383CFFD1EFFA8FFFD05A8FFA8527DFF7D527DFFFD07%A8FD40FF7C7CA8FFFFFFCFFD23FFA8A87DFD05A87DA8A8A853A8A8A87DFD%04A8FD41FFAE83FD29FFA8A8A87D7DFFA8FFA8FFA8FFA8FF7D7DA8FFA8FD%36FFA8A8A8FD33FFA8A87DA87DFD0BA87DFD04A8FD34FF7DFD04A8FD04FF%FD09A87EFD25FFFD04A87DFD09A87DFD04A8FD33FFA859A9A87DA8FF7DFF%FFA8A8FFA8FFA8FFA8FFA8FF7DFD23FFA8A87DA87D7D7DA87DA8A8A87DA8%7D7D7DA87DA8A8FD31FFA87DFF7D5227527DFFA8A8A8FFA6ADA6ADA6CEAD%CECFA9A8FD23FFFD05A87D7DFD05A87D7D7DFD04A8FD30FFA87EA8FF5252%2752275252FFA8A8AE8181A681A681ACA6CFA8FD23FFA8A87DA87DA87D7D%527D7D7D527D7DA87DA87DA8A8FD2EFFA8A8FFA8FD0952A8FFFF81A681AC%A6ACA6ACCFA9A8FD1FFFAECFA6ADA8A87DA87DA8A1FD067DA87DA87DA8A8%ADA6CEADCFCFFD28FF7DA8A87D27522752275227522752277DA7A6818281%A681A681CFA8A9FD18FFAEFFCFCFA8CFA7AD81A582A8FD057D7E7DA27DA8%7D7D7D7E7D7D7DA8A78181ACA6ADA7CFAEFFAEFD21FFA8A8FFA85227FD0B%52275257A681AC82AC81ACCFA9A8FD1BFFCFCFADCEA7ADA6ADA8CFA8A8A8%CFA8A8A8AEA8A8A8AEA8A8A8CFA8ADA6ADADCEADCFCFFFCFFD20FFA8A8A8%FFFD04522752525227522752275252522752518181A681A681CFA8FD19FF%CFFFCFCFA8CFADCFA7CEA6A7A6ADA6A682A682A682A682A682A7A6A7A6AD%A6ADA7CFA7CFA8CFCFFFCFFD1EFFA8A8FFA8FD0952A8FFA8FD09527C81AC%81A6AEFFA8FD1DFFCFFFCFCFAECFAECFADCFADCEA7CEADCEA7CEADCEADCF%ADCFADCFCFCFAEFFCFFFCFFD20FFA7FFA87D2752525227FD0452A9FFCFFF%A9525227522752275227587BA681CFA8FD1FFFAEFFCFFFA8FFAECFA8CFAE%CFA8CFAECFA8CFAECFA8CFAECFA8FFCFFFAEFFCFFD20FFA8FFA87D27FD07%527DFFFFAD81ADFFFF7DFD075228527BA6AEFFAFFD5AFFA8A8A8FF7D5227%FD05522752A8FFA7A681A681A6ADFFA852275227525252275251AEA9A8FD%59FFA8A8FFFFFD09527DFFFFA68181AC81A681ACA6FFFF7DFD0952FFFFA8%A8FD25FFAEFD30FF7DA8FF7D2752525227FD0452A8FFCF8181818281A681%A681A581CFFFA85252275227522752277DA8A8A8FD23FFCFADA7CFA7CFFD%2BFF84FFA87D27FD07527DFFFFAD81A681A681AC82A681AC82AC81ADFFFF%7DFD0752277DA8FFA8FD22FFCFA6CEADADA6CECFFD27FFA8A8FF7D5227FD%05522752A8FFA782818281A6818281A681A681A681A681A6AEFF7E522752%2752525227527DFFA8A8FD20FFA7ACA6ADA6AC81ACA7FD0BFFCFFD19FFA8%A8FF7DFD08527DFFFFA68181A681A681A681A681A681A681AC82A681ACA7%FFA97D27FD0552275252FFA8A8FD1FFFCFA6ACA6ADA6AC81A6A7FD07FFCF%CFADCEFD18FFA8A8A8275252522752525227A8FFAE7B8181817B82818181%82818281A6818181A681A681A581CFFFA8522727522752272727A8A8A8FD%1EFFA7A682A681AC81A68181A7FD05FFA6ACA6ADA6CFFD17FFA8FFFD0852%7DFFFFAD8182818281A681A682A681A681AC81A682AC82AC81ACA6A681AD%FFFF7D52275227FD0452FFA8FD1FFF81AC81AC81AC81AC81A6FD04FF82AC%A6ADA6ADAEFD16FFA8A8A8FD055227527EFFA7827B817B8281817B81A7FF%828181828182A7FFA6A681A6818281817BA6AEFF7D52275227522728A8FD%20FFA681A68182818181A67BAEFFFF818181AC81A681CFFD17FFA8FFFD05%527DA9FFA6817B8281828182818281FFFFCF81A681A681FFFFCF81A68182%818281828182A7FFA97D2752275252FFA8FD1FFFA78181A681A681828181%82FFA78182A681ACA6A6CFFD17FFA8A8A8275227A8FFCF7B817B817B817B%817B827B82A8FFAE827B8281A6AEFFAE827B827B817B827B817B8181CFFF%A8525227A8A8A8FD20FF828181817B8157815782A8827B817B81818182FD%19FFA8FFFFA8FFFFFF818181828182818281A6818282FFFFFF81A681A682%FFFFFF81828182818281828182818182FFFFFFA8FFFFA8FD22FF82817B82%8182578282CF7B828182818281FD1AFFFD04A87D7DA88257817B817B827B%817B828182CFFFCF8281827B82FFFFCF827B8281817B827B817B827B82A8%7D7DA87DA8A8FD23FFA77B568157575682A7575781578157CFFD1DFFA8FF%7DFF82817B8281827B828182818281FFFFFF8182818281FFFFCF81828182%8182818281827B8282FF7DFFA8FD27FFCFA77C827C827CA75757578282FD%21FFA8A882578157817B8157817B817B81A7FF82817B817B81A7FF82817B%815781578157817B815782A884FD30FF7CCFA8A8A8FD22FFA8FF82817B82%818181A6818281A68182828281828182818282828182818281A681828182%818282FF7DFD57FFA8A8825781578182FFAEA67B817B827B8157827B817B%827B8157827B8157A6CFFF7B817B815782A8A8FD28FFA8A8527DA8FFA8A9%A8AFA8FD24FFA8FF7B82818257ADFFA77B8281827B8281827B8281827B82%81827B8281827BA7FFAD5782818182FFA8FD27FFA87D5252527DA8AF6085%84AFCAFD23FFA8A882578157817BAD8281578157815781578157817B8157%817B8157817B8182A77B8157815782A8A8FD26FF7D7D2752275227525984%608484FD24FFA8FF818281827B8182AE578281827B8281827B8281827B82%81827B8281827BCF82817B82818182FFA8FD25FF7D535252527D52522752%538460AFFD24FFA8A882578157815782A8815781578157817B8157817B81%57817B8157815782A882578157815782A8A8FD22FFA8A85252275252A884%A8525227522E5A84FD24FFA8FF81817B827B8157CFA7817B827B817B827B%817B827B817B827B817B81A7AE57827B81578182FFA8FD22FFA8FD04527D%AF848484AF7D522752287DA8FD23FFA8A88257815781577B7BFF577B5781%578157815781578157815781577B57FF7B7B578157815782A8A8FD20FFA8%7D275227527D855A605A6060AF7D522752277DA8FD22FFA8FF818157827B%825781A7CF57827B827B827B827B827B827B827B8157FFA7817B827B827B%8182FFA8FD1FFF7D7D5252527DA8855A8460846085608BA87D525227527D%FD21FFA8A882577B578157815781A8AE5781578157815781578157815781%57AEA8815781578157815782A8A8FD1EFF7D522752528484605A605A845A%845A84608484A8522727527DFD20FFA8FF7B81578157827B815782CFCF57%81578157827B81578257817BFFCF8257827B8157827B817CFFA8FD1DFFA8%7D275252A8845A5A845AFF848484FF84845A6084AF7D52277DA8FD1FFFA8%A882567B577B5781577B5681A8FF8281575756815757568183FFA781577B%5781577B57815782A8A8FD1EFF7D7D7DA8355A595A5984FF843584FF8435%5A595A59AF7D7D7DFD1EFFCFFFA8FF7C815781578257815782578183FFFF%AE83A782A783CFFFFF8281578157827B81578257817CFFA7CFCFFD1FFF84%FD045A8484FF846084FF84605A605A6084FFA8FD18FFCFFFAECFA7CEA7AC%81A7CB82567B5757577B577B5781575757A7A7CFA8FFA8CFA78357575781%577B5781577B577B5782A9A781ACA6CEA7CFAEFFCFFFCFFD15FFA8842F5A%5A845960845A595A845A59845A5A3584A8FD16FFCFFFCFCFADCFADADA6AC%A5A67CFF7C575781577B5781577B5781577B577B57827B82577B57815781%5781577B5781577B577B7CFF7CAC81ACA6ADA7CEA7CFCFFFCFFD15FF845A%59FF845A595A5A5A59FD045AFF5A5A7EFD10FFAEFFCFFFA8FFAECFA7CFA7%ADA6AC82A681A68183A88256FD06577B5757577B5757577B5757567B5757%577B5757577B5757577B57575682A98281A681A681ACA6ADA7CFA7CFA8CF%AEFFAEFD0FFFA8842F5A7E84355A595A595A595A595A7E5A3584A8FD12FF%CFFFCFCFAECFADCEA7CEA6ACA6ACA6AC7DFF5757577B5757577B5757577B%577B577B577B577B577B577B577B577B577B577BFD04577BFF82ACA6ACA6%ACA6ADA7CEADCFADCFCFFFCFFD11FF845A5984845A595A5A5A595A5A5A84%84595A7EFD0EFFCFFFAEFFCFCFA8CFAECFA7CFA7ADA6ADA6AC82AC8183CB%A77C837CA782837CA782837CA7828382A782A782A782A782A782A782A782%837CA782837CA7FFA781ACA6ACA6ADA6ADA7CEA7CFA7CFAECFAEFFCFFFCF%FD0BFFA8842F5A2FA85A592F5A595A355A5AA82F5A2F84A8FD10FFCFFFCF%CFAECFAECFADCFADCEA7CEA6ADA6AC82A9A9FFCBFFA9FFCBFFA9FFCBFFA9%FFCBFFA9FFA9FFA8FFA9FFA8FFA9FFA9FFFFFFCBFFFFFFCBA882ACA6ADA6%ADA7CEADCFADCFAECFAEFFCFFFCFFD0FFF7E5A595A59AF7E5A2F5A595A5A%AF5A5A595A7EFD0CFFCFFFAEFFCFFFA8FFAECFA8CFA8CFA7CFA7ADA7ADA7%ADA6AD82837CA77C827CA67C827C827C827C827C827B827B7C577C7B7C7B%827C827CA682A77CA782A782ADA6ADA6ADA7ADA7CFA7CFA7CFAECFA8FFAE%FFAEFFCFFFAEFD09FFA8842F592F592FA88484598484A859592F592F84A8%FFAEFD0EFFCFFFCFFFCFFFFD06CFADCFADCFADCFADCEADCEADCEA6CEACAD%A6ADACACA6ACA6ACA6ACACACA6ACACACA6ADACADA6CEACADA6CEADCEADCE%ADCEADCFADCFADCFCFCFAEFFCFFFCFFFCFFFCFFD0BFFAECFA6AD7E595359%2F5A2F7E7EA97E7E2F5A595A2F5A7EADA6CEADCFCFFD08FFCFFFCFFFCFFF%CFFFAEFFAECFAECFAECFA8CFAECFA7CFA7CEA7CFA7ADA7CEA7ADA7ADA7AD%A6ADA7ADA6ADA6ADA6ADA7ADA6ADA7ADA7CEA7ADA7CFA7ADA7CFADCFA7CF%AECFA8CFAECFAEFFCFFFAEFFCFFFCFFD05FFCFCFA8CFA7AD81ABA6842F59%2F592F592F2F2F592F592F592F592F84A7A581ACA6ADA7CFCFFFCFFD08FF%CFFFFFFFCFFFCFFFCFFFCFFFAEFFCFCFAECFCFCFAECFAECFADCFADCFADCF%ADCFA7CFADCFA7CFADCFA7CFADCFADCFADCFADCFAECFAECFCFCFAECFCFCF%AEFFCFFFCFFFCFFFCFFFFFFFCFFD07FFCFFFCFCFADCFADADA6ADA8A884A8%84A884A884A87DA884A884FD04A8ADA6ADA6CEADCFAEFFCFFD0AFFAEFFCF%FFAEFFCFFFA8FFAEFFA8FFAECFA8CFAECFA8CFAECFA8CFAECFA7CFA8CFA7%CFA8CFA7CFA8CFA7CFA8CFA8CFAECFA8CFAECFA8CFAECFA8FFAEFFA8FFCF%FFAEFFCFFFAEFFCFFFCFFD05FFCFFFA8FFAECFA7CFA7ADA6ADA6A782A7A6%A682A682A682A682A682ADA6A7A6ADA7ADA7CFAECFA8FFCFFD18FFCFFFFF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFFFFFCFFD1BFFCFFFCFCFAECFCFCFADCFADCFADCFADCEADCFAD%CEADCFADCFADFD04CFFFCFFFCFFD18FFCFFFCFFFCFFFCFFFCFFFCFFFAEFF%CFFFAEFFCFFFAEFFCFFFAEFFCFFFAEFFCFFFAEFFCFFFAEFFCFFFCFFFCFFF%CFFFFFFFCFFD17FFCFFFCFFFAEFFCFCFAEFFAECFAECFAECFAECFAECFAEFF%CFFFAEFFCFFFCFFDFCFFFD0AFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--10 Bn%AI5_BeginGradient: (Unnamed gradient 10)(Unnamed gradient 10) 1 4 Bd[<0708090A0A0B0C0D0E0F10111213141415161718191A1B1C1D1E1F202121232425262728292A2A2B2C2D2E2F30313233333536363738393A3B3C3D3D3E3F40414243444445464748494A4B4C4D4E4E4F5051525354545556575858595A5B5C5D5D5E5F6061616263646565676768696A6B6B6C6D6E6F6F70717273747575777878797A7B7B7C7D7E7F7F8081818283838485868687878889>0<0000000101010101020202020303030303040404040405050506060607070608080808080A090A0A0A0B0B0B0B0C0C0D0D0C0E0E0E0E0E10100F10111211111212121313121414141414151615151717161717181818181819191A19191B1B1A1A1C1C1B1C1C1D1D1D1D1D1E1F1F1F20202020202121222121232223232324242424252526262527272726262828272729292829292A2A2A>0<F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E><FDFDFCFCFCFCFBFBFBFBFAFAFAFAF9F9F9F9F8F8F8F8F7F7F7F7F6F6F6F6F5F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEEEDEDEDECECECECEBEBEBEBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1E1E0E0E0E0DFDFDFDFDEDEDEDDDDDDDDDCDCDCDCDBDBDBDBDADADADAD9D9D9D9D8D8D8D8D7D7D7D7D6D6><FFFFFFFEFEFEFEFEFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAF9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F5F4F4F4F4F4F3F3F3F3F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0EFEFEFEFEEEEEEEEEEEDEDEDEDEDECECECECECEBEBEBEBEAEAEAEAEAE9E9E9E9E9E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5E5E5E5E5E4E4E4E4E3E3E3E3E3E2E2E2E2E2E1E1E1E1E0E0E0E0E0DFDFDF>4 %_Br<898A8A8C8D8E8E8F90919293949596979798999A9B9C9C9D9D9E9FA0A0A1A1A3A3A5A5A6A7A8A9AAABABACACADAEAFB0B1B1B2B3B4B4B5B6B7B7B8B9BABABBBCBDBDBEBFC0C0C1C2C3><00000000000000000000000000000000000102030405060708090B0C0E0F1112141618191B1E1F2122242628292A2C2D2F3032333537383A3B3D3E404143444648494B4C4E4F515354><2A2A2A2A2B2A2B2A2B2B2A2B2C2B2B2C2B2C2B2B2C2B2C2C2B2C2D2C2D2E2D2E2D2E2E2E2E2E2D2E2F2E2E2E2E2F2E2F302F2F302F302F2F302F2F302F2F302F30302F302F2F302F30><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101><5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39><D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D><DFDEDEDDDCDCDBDBDAD9D9D8D7D7D6D5D5D4D4D3D2D2D1D0D0CFCECECDCCCCCBCBCAC9C9C8C7C7C6C5C5C4C4C3C2C2C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7B7B6B5B5B4B4B3B2B2B1>4 %_Br<C3C3C4C5C6C6C6C7C8C9C9CACBCBCDCDCECFCECFD0D1D1D2D3D3D4D5D6D6D6D7D7D8D9DADADBDCDCDDDEDEDEDFE0E0E1E1><545557585A5B5B5C5E5F6162646667696A6C6B6C6E6F717273747677787A797B7C7E7F8182838586878988898B8C8E8F90><303031323334363737383839393A3B3B3C3C3E3F40404142424546464747494A4A4B4B4C4C4D4D4E4E4F50515252535354><01010101010102020202020303030304040405050606070808090A0B0B0C0D0E0E0F10111112131415161718191A1B1C1D><39393838373737363635353434343333323232313130302F2F2F2E2E2D2D2D2C2C2B2B2A2A2A2929282827272726262525><8D8C8B8A89888887868584838281807F7E7D7D7C7B7A79787776757473727271706F6E6D6C6B6A69686767666564636261><B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9997969594939291908F8E8D8C8B8A89888786858483828180>4 %_Br[0.027451 0 0 0 0.960784 0.992157 1 2 50 0 %_BS%_0.027451 0 0 0 0.960784 0.992157 1 2 50 0 Bs0.537255 0 0.164706 0 0.368627 0.839216 0.87451 2 50 38.7978 %_BS%_0.537255 0 0.164706 0 0.368627 0.839216 0.87451 2 50 38.7978 Bs0.764706 0.329412 0.188235 0.003922 0.223529 0.552941 0.694118 2 50 82.5137 %_BS%_0.764706 0.329412 0.188235 0.003922 0.223529 0.552941 0.694118 2 50 82.5137 Bs0.882353 0.564706 0.329412 0.113725 0.145098 0.380392 0.501961 2 50 100 %_BS%_0.882353 0.564706 0.329412 0.113725 0.145098 0.380392 0.501961 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 1030)(Unnamed gradient 1030) 1 4 Bd[<BDBDBCBCBBBBBABABAB9B8B8B8B7B6B6B5B4B4B4B3B2B1B1B0AFAFAFAEADACACABAAA9A9A9A8A7A7A6A5A4A4A3A3A2A2A1><484746454443434141403F3E3D3C3B3A3938373635343332302F2E2C2B2A2928272625232221201E1D1C1B1A1917161513>1<2322201F1E1D1C1B191817161514131211100F0F0E0D0C0B0A090808070606050504040403030202020202010101010101><4A4B4C4C4D4E4F4F505152525354555556575858595A5B5B5C5D5E5E5F606161626364646566676768696A6A6B6C6D6D6E><808182838485868788898A8B8C8D8E8F9091929394959697999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1><1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212121222222232323242424252525262626272727272828282929>4 %_Br<A1A09F9E9D9C9B9998979695949291908F8E8D8C8B8A8988878685838281807F7E7D7B7A7978777575737271706F6E6D6C6B6A6968676665646261605F5E5D5C5B595857><1312131110110F0E0E0D0B090A09080807060706050504030403020102010001000000000000000000000000000000000000000000000000000000000000000000000000><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFCFCFBFBF9F8F7F7F5F5F3F3F2F1EFEFEDECEBEAE8E7E5E5E3E2E0E0DFDE><0101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2><B1B2B2B3B4B4B5B6B6B7B8B9B9BABBBBBCBDBDBEBFBFC0C1C1C2C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECFCFD0D1D1D2D3D3D4D5D5D6D7D7D8D9DADADBDCDCDDDEDEDF><29292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A>4 %_Br<575756565555545454535352525251515050504F4E4E4D4D4C4C4B4B4B4A4A484848474747464645454544444442424141414040403F3F3F3E3E3D3D3D3C3C3B3A3A3A3939393838383737373636363534343333333232323231313130302F2E2E2E2E2E2E2E2D2D2C2B2B2B2A2A2A2A2929292828282827272626252525242424242322222221212121202020201F1F1F1F1E1E1E1E1D1D1D1C1C1B1B1B1B1A1A1A1A1919191919171717171716161616161515151515141414141413131313131212121212121111101010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A090909090909090909090808080808080808080707070707070707070606060606060505050505050505050505050404040404040505040404040404040404040404040404040404040404040404040404040404040404040404040404040404>0<DEDDDCDBDAD9D8D7D6D5D4D2D1D0CFCECDCCCBCAC9C8C8C7C6C5C4C3C2C1BFBEBDBDBBBAB9B8B6B5B4B3B3B2B1B0AFAEADACACABA9A8A7A6A6A4A3A2A19F9F9E9D9C9A9A999796959594929190908F8D8C8C8B89888887858484838280807F7D7C7C7A7979787676757372727170706E6D6D6C6B6B6A6868676666646463626261605F5E5E5D5C5C5B5B595858575755545452525151504E4E4D4D4C4C4A4A494947474646454444424241413F3F3E3E3E3D3C3B3B3A3A3939383836363635353434323231313130302F2F2F2D2D2C2C2C2B2B29292A2828282727272626242424232323222222202020201F1F1F1E1E1E1C1C1C1C1B1B1B1A1A1A1A191919191717171716161616161514151514141414141212121212121111111111111010101010100E0E0E0E0E0E0F0F0E0E0E0E0E0E0E0E0E0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B>0<B2B2B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C5C5C5C6C6C6C7C7C7C8C8C9C9C9CACACACBCBCBCCCCCCCDCDCDCECECECFCFCFD0D0D0D1D1D1D2D2D2D2D3D3D3D4D4D4D5D5D5D6D6D6D6D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDBDCDCDCDCDDDDDDDEDEDEDEDFDFDFDFE0E0E0E0E1E1E1E1E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5E5E5E6E6E6E6E7E7E7E7E7E8E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDEDEDEDEDEEEEEEEEEEEEEFEFEFEFEFEFF0F0F0F0F0F0F1F1F1F1F1F1F1F2F2F2F2F2F2F2F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA><DFDFDFE0E0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E2E3E3E3E3E3E4E4E4E4E4E4E5E5E5E5E5E5E6E6E6E6E6E6E7E7E7E7E7E7E8E8E8E8E8E8E9E9E9E9E9E9E9EAEAEAEAEAEAEBEBEBEBEBEBEBECECECECECECECEDEDEDEDEDEDEDEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><4A4B4C4D4E4F505152535455565758595A5B5C5D5D5E5F60616263646566676869696A6B6C6D6E6F7071717273747576777878797A7B7C7D7D7E7F8081828283848586868788898A8A8B8C8D8E8E8F909191929394949596979798999A9A9B9C9D9D9E9F9FA0A1A1A2A3A4A4A5A6A6A7A8A8A9AAAAABACACADAEAEAFAFB0B1B1B2B3B3B4B4B5B6B6B7B7B8B9B9BABABBBCBCBDBDBEBEBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACACBCBCCCCCCCDCDCECECFCFD0D0D1D1D2D2D2D3D3D4D4D5D5D6D6D6D7D7D8D8D8D9D9DADADADBDBDCDCDCDDDDDDDEDEDEDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E8E8E8E8E9E9E9E9EAEAEAEAEBEBEBEBEBECECECECEDEDEDEDEDEEEEEEEEEEEEEFEFEFEFEFEFF0F0F0F0F0F0F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4>4 %_Br[0.741176 0.282353 1 0.137255 0.290196 0.501961 0.101961 2 50 0 %_BS%_0.741176 0.282353 1 0.137255 0.290196 0.501961 0.101961 2 50 0 Bs0.631373 0.07451 1 0.003922 0.431373 0.694118 0.160784 2 50 21.8579 %_BS%_0.631373 0.07451 1 0.003922 0.431373 0.694118 0.160784 2 50 21.8579 Bs0.341176 0 0.870588 0 0.698039 0.87451 0.290196 2 29.1667 54.6448 %_BS%_0.341176 0 0.870588 0 0.698039 0.87451 0.290196 2 29.1667 54.6448 Bs0.015686 0 0.043137 0 0.980392 1 0.956863 2 50 100 %_BS%_0.015686 0 0.043137 0 0.980392 1 0.956863 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 1116)(Unnamed gradient 1116) 1 4 Bd[<00000001020304050506070809090A0B0C0D0F1011121415161718191A1B1C1C1D1E1F20212324252627292A><00000000010202030304040506060708090A0A0B0C0D0E0F1010111213141415161718191A1B1B1C1D1E1F20><00000000010202030304040506060708090A0B0B0C0D0F1011121213141516171718191A1B1C1C1D1E1F2021>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3>4 %_Br<2A2B2D><202022><212123>0<D3D2D0><D3D2D0><D3D2D0>4 %_Br<2D2E2F3031333435363738393B3C3D3E3F40414344454647484B4C4D4E4F50525354555657595A5B5D5E6061626364666768><22232425262728292A2B2C2D2E2F30313233343535363738393B3C3D3E3F4041424344454647484A4B4C4D4E4F5051535354><232425262829292A2B2C2D2E2F30313233343536373838393A3C3D3E3F4041424344454647484A4B4C4E4F50515253545555><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101><D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E><D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E><D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E>4 %_Br[0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 Bs0.164706 0.12549 0.129412 0 0.827451 0.827451 0.827451 2 50 38.7978 %_BS%_0.164706 0.12549 0.129412 0 0.827451 0.827451 0.827451 2 50 38.7978 Bs0.176471 0.133333 0.137255 0 0.815686 0.815686 0.815686 2 50 82.5137 %_BS%_0.176471 0.133333 0.137255 0 0.815686 0.815686 0.815686 2 50 82.5137 Bs0.407843 0.329412 0.333333 0.003922 0.619608 0.619608 0.619608 2 50 100 %_BS%_0.407843 0.329412 0.333333 0.003922 0.619608 0.619608 0.619608 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 1117)(Unnamed gradient 1117) 1 4 Bd[00001114 %_Br<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344><00000000010202030304040506060708090A0A0B0C0D0D0E0F10101112131414151618191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535><00000000010202030304040506060708090A0B0B0C0D0E0F10111212131415161717191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F3031323334353637>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBC><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBC><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBC>4 %_Br<444341403F3E3D3C3B3938373635343331302F2E2D2C2B2A29272625242321201F1D1C1C1B1A191817161514131211100F0D0C0B0A0909080706050504030201000000><353534333231302F2E2D2C2B2A29282726252423222120201F1E1D1C1B1B1A19181615141413121110100F0E0D0D0C0B0A0A0908070606050404030302020100000000><37363534333231302F2E2D2C2B2A29292826252423222121201F1E1D1C1C1B1A19171716151413121211100F0E0D0C0B0B0A0908070606050404030302020100000000>0<BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>4 %_Br[0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 Bs0 0 0 0 1 1 1 2 50 38.7978 %_BS%_0 0 0 0 1 1 1 2 50 38.7978 Bs0.266667 0.207843 0.215686 0 0.737255 0.737255 0.737255 2 50 82.5137 %_BS%_0.266667 0.207843 0.215686 0 0.737255 0.737255 0.737255 2 50 82.5137 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 13)(Unnamed gradient 13) 0 2 Bd[<6B6B6B6C6C6C6D6D6D6E6E6E6F6F707071717272727373747475767678787979797A7B7C7C7D7D7E7E7F808081828283838485858687878889898A8B8B8C8D8E8F90909191939394959596979898999A9B9B9C9D9E9E9FA0A1A2A2A3A4A4A4A5A6A7A8A8A9AAAAABABACADAEAFAFB0B0B1B2B3B3B4B5B6B7B8B8B8B9BABABBBCBCBDBDBEBFBFC0C0C1C2C2C3C4C4C5C6C6C7C7C8C9C9CACBCBCCCCCDCDCECECFCFD0D0D1D1D2D2D3D4D4D5D5D6D7D7D8D8D9D9DADADBDBDCDCDCDDDDDEDEDFDFE0E0E1E1E1E1E2E2E2E3E3E3E4E4E5E5E5E6E6><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100020101020203030403050405050606070707080809090A0A0C0B0D0D0E0E0F0F1011111212131314141515161617171818191A1A1B1B1C1C1D1D1E1F1F202021212223232424252526282829292A292B2C2C2D2D2E2F2E2F2F303131323233343435353637373839383A393A3B3B3C3D3D3E3E3F40404142424344444444454646474848494A4A4B4C4C4D4E4E4E4F4F50505051525253535354555555><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFC><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101010101010101010101010101010102020202020203030303030404040404050505050606060707070708080809090A0A0A0B0B0C0C0D0E0E0F0F0F1010111112131314151516161819191A1B1B1C1C1D1E1E1F202021232324242526262829292A2C2C2D2F2E303131333434363838393B3B3C3E3E3F414142><A1A1A1A0A0A09F9F9F9E9E9E9D9D9C9C9B9B9A9A9A9999989897969695959494939392919190908F8F8E8D8D8C8B8B8A8A8988888786868584848382828180807F7E7D7D7C7B7B7A79787877767675747373727170706F6E6D6C6C6B6A696968676665656463626161605F5E5D5D5C5B5A5958585756555453535251504F4E4D4D4C4B4A49484747464544434241403F3F3E3D3C3B3A39383736363534333231302F2E2D2C2B2B2A292827262524232221201F1E1D1C1B1A1A191817161514131211100F0E0D0C0B0A09080706050403020100><D5D5D5D5D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D0D0D0CFCFCFCECECECDCDCCCCCCCBCBCACACAC9C9C8C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAA9A9A8A8A7A7A6A6A5A4A4A3A3A2A2A1A0A09F9F9E9E9D9C9C9B9B9A9A999898979796959594949392929191908F8F8E8E8D8C8C8B8A8A898988878786858584848382828180807F7E7E7D7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A696968><000000000000010101010101010102020202020203030303030304040404040505050505060606060607070707070808080808090909090A0A0A0A0A0B0B0B0B0C0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F101010101111111112121212131313141414141515151516161617171717181818181919191A1A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F1F20202021212122222223232323242424252525262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2E2E2E2F2F2F3030303131313232323333333434343535353636363737>4 %_Br[0.901961 0.333333 0.988235 0.258824 0 0.407843 0.215686 2 50 100 %_BS%_0.901961 0.333333 0.988235 0.258824 0 0.407843 0.215686 2 50 100 Bs0.419608 0 1 0 0.631373 0.835294 0 2 58.7912 0 %_BS%_0.419608 0 1 0 0.631373 0.835294 0 2 58.7912 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 157)(Unnamed gradient 157) 0 9 Bd[<646465666767686869696A6B6C6C6D6E6F6F70717273747475777779797B7C7D7E7F80><5252515352525353545455545555575657585859585A5B5B5B5C5C5D5E5D5E60616061><515151525252515352525353545453555455555556565656575658575858595859595A><0101010101010101010102020202020202020202020203030303040404040505050506><A1A1A0A09F9F9E9E9D9D9C9B9A9A9998979796959493929291908F8E8D8C8B8A898887><A1A1A1A0A0A09F9F9E9E9D9D9C9C9B9B9A9999989897969695949493929291908F8F8E><A2A2A2A1A1A1A1A0A0A09F9F9E9E9E9D9D9C9C9C9B9B9A9A9999989897979696959594>4 %_Br<9D9C9B9A99989796959493939291908F8E8D8C8B8A898987878685848381807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6968676664><7C7B7A7978797877767574737272717270706F6E6D6C6C6A6B6B6A6968676665646364636261605F5E5D5C5D5C5B5A5A58585756555554545352><7574747374727171706F70706F6E6E6C6D6C6B6B6A696869676766656465646363626061605F5F5E5D5C5D5B5A5A595858585756555354535251><2625232222211F1E1D1C1B1A1918171616151413121110100F0E0D0C0C0B0B0A0908080707060605050404040303030202020202020101010101><6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F8081828385868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1><6E6F70717272737475767778797A7B7B7C7D7E7F80818283838485868788898A8B8C8C8D8E8F90919293949495969798999A9B9C9D9D9E9FA0A1><7273747575767778797A7A7B7C7D7E7F7F80818283848585868788898A8A8B8C8D8E8F8F90919293949595969798999A9A9B9C9D9E9F9FA0A1A2>4 %_Br<B6B5B5B4B4B3B2B1B0AFAFAEADADABABABABAAA8A8A7A6A7A5A5A4A3A3A2A1A1A1A09F9F9E9E9E9E9D9D><9190908F8E8E8E8D8D8C8B8A8A898989878786868685848383828282818081807F7F7E7E7E7E7D7D7C7C><8888878786868685848483838282818180807F7F7E7D7C7C7C7B7A7A7A79797878787777767676767575><555351504E4C4C4A494745444240403F3D3C3A3A3937363434333131302E2E2D2C2B2A2A292927272626><464748494A4B4C4D4E4F50515253545555565758595A5B5B5C5D5E5F5F60616262636464656566666767><50515253545555565758595A5B5C5C5D5E5F60606162636464656666676868696A6A6B6B6C6C6D6D6E6E><545556575859595A5B5C5D5E5F606061626364646566676868696A6A6B6C6C6D6E6E6F6F707071717272>4 %_Br<68686A6A6A6A6B6B6C6E6E6E6E6F70707172737374757576777878797A7B7C7C7D7E7F7F80818283838384858687888788898B8B8C8E8F8E8F9091929394959696969798999A9B9C9D9E9E9FA0A1A2A3A2A3A4A5A5A7A7A8A9AAABABACADAEAFAFB0B2B2B3B4B5B5B6><575758585859595A5A5A5A5B5D5C5D5D5E5F5E605F6062616263636463646566666768686969696A6B6B6B6C6D6C6D6F706F7071727172737574757677767778797A797A7B7C7D7C7D7E7F807F8081828384838485868788868889898A8C8A8B8C8C8E8F908E909091><5D5D5E5E5E5E5F5F606060616062616362636364646566666766686769696969696A6B6B6B6C6C6D6E6E6F6F6E707170717372727373747574767675767879787879797A7A7B7A7C7D7C7C7D7F7E7F7F807E8181828181828483838485838586878786868789878888><030303030303030303030304040405050506060606070707080809090A0A0B0C0C0D0D0D0E0F0F101111121313141515161717191A1A1B1C1C1D1E1F202122232425252728292A2B2C2D2E3031313334353637393A3B3C3E3F404143454546484A4B4C4E4F51515355><9D9D9C9C9B9B9A9A9998989797969595949392929190908F8E8D8D8C8B8A898988878686858483828181807F7E7D7C7C7B7A79787776757574737271706F6E6D6C6C6B6A696867666564636261605F5E5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746><9B9B9A9A9A99999898979796959594949392929191908F8F8E8D8D8C8C8B8A8989888787868585848383828180807F7E7D7D7C7B7A7A797877777675747473727170706F6E6D6C6C6B6A6968686766656463636261605F5E5E5D5C5B5A595958575655545353525150><989897979796969595949493939292919190908F8F8E8D8D8C8C8B8B8A898988888786868584848382828180807F7E7E7D7C7C7B7A7A79787877767675747373727171706F6E6E6D6C6C6B6A69696867666665646363626160605F5E5D5D5C5B5A5959585756565554>4 %_Br<4A4A4B4D4D4E4F505051525354565657585A5B5D5E5F606162636465666768><40404142424342434546454647484A494A4C4D4E4F50515152535454555657><40404142424445464646484A4B4C4B4D4E4F5052535354565758595A5B5C5D><00000000000000000000000000000000000000000101010101010202020203><B7B7B6B5B5B4B3B2B2B1B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D><B3B3B2B1B1B0B0AFAEADADACABAAA9A9A8A7A6A5A4A3A2A2A1A09F9E9D9C9B><B2B2B1B0B0AFAEADADACABAAA9A8A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998>4 %_Br<9D9C9B9A99989796959493939291908F8E8D8C8B8A89888786858584838281807F7E7D7C7B7A7978757574737271706F6E6D6C6B6A6968676664636261605F5D5C5B5958575554535251504F4E4D4B4A><7C7B7A797A797877767574737473727170706F6E6E6E6D6C6B6A69696A68676665646362636261605F5F5E5D5D5C5C5B5A595857575756555453525151504F4E4D4C4A49494847464544434243424140><7574747573727171727170706E6D6E6D6D6C6B6C6A6A696869696867656665646363626361605F5F5F5F5E5D5B5C5B5A59585758565554545453535150504F4E4D4C4C4B494847464746454442424140><2625232322211F1E1E1C1B1A1A1918171615141313121110100F0E0D0C0C0B0B0A0908080707060605050504040403030302020202020101010101010101000000000000000000000000000000000000><6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7><6E6F7071717273747576777878797A7B7C7D7E7F7F80818283848586868788898A8B8C8D8D8E8F90919293949495969798999A9B9B9C9D9E9FA0A1A2A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B0B1B2B3><727374747576777878797A7B7C7D7D7E7F808181828384858586878889898A8B8C8D8E8E8F9091929293949596969798999A9B9B9C9D9E9F9FA0A1A2A3A3A4A5A6A7A7A8A9AAABACACADAEAFB0B0B1B2>4 %_Br<65666768696A6B6C6E6F6F707172737475767778797A7B7C7D7E7F808183848586878889898B8C8D8D8F8F909192939495969798999A9B9C9D><545556575757595A5A5C5C5C5C5E5E5F60616161626364656665666869696A6B6A6B6C6D6E6F706F7071727274757474767778797A797A7B7C><5C5D5C5D5E5F5F606060616263626364636466676667686768696A696A6B6A6B6D6D6C6D6E6D6E6F706F707170707273727373727375767475><020202030303030303040405050506060607070808090A0B0B0C0D0D0E0F0F1011121213141415161718191A1A1B1C1D1E1F20212223242526><A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867><9E9D9C9B9B9A99989796959594939291908F8F8E8D8C8B8A8989888786858483838281807F7E7D7D7C7B7A7978777776757473727171706F6E><9A99999897969695949493929191908F8F8E8D8C8C8B8A8A89888787868585848382828180807F7E7D7D7C7B7B7A7978787776767574737372>4 %_Br<6D6C6C6B6B6A69696868666665><50515151525353525352545454><484A4C4D4E5051555658595A5C><01010101010101010101020202><999A9A9B9B9C9D9D9E9E9F9FA0><A0A0A0A09F9F9F9F9F9F9E9E9E><A7A6A5A4A3A2A19F9E9D9C9B9A>4 %_Br[0.501961 0.380392 0.352941 0.023529 0.529412 0.556863 0.580392 2 50 100 %_BS%_0.501961 0.380392 0.352941 0.023529 0.529412 0.556863 0.580392 2 50 100 Bs0.392157 0.321569 0.317647 0.003922 0.631373 0.631373 0.635294 2 59.2592 87.3626 %_BS%_0.392157 0.321569 0.317647 0.003922 0.631373 0.631373 0.635294 2 59.2592 87.3626 Bs0.615686 0.486274 0.458824 0.14902 0.403922 0.431373 0.447059 2 50 77.4725 %_BS%_0.615686 0.486274 0.458824 0.14902 0.403922 0.431373 0.447059 2 50 77.4725 Bs0.713725 0.568627 0.533333 0.333333 0.27451 0.313726 0.329412 2 41.8182 74.7253 %_BS%_0.713725 0.568627 0.533333 0.333333 0.27451 0.313726 0.329412 2 41.8182 74.7253 Bs0.407843 0.341176 0.364706 0.011765 0.615686 0.607843 0.596078 2 56.1798 52.1978 %_BS%_0.407843 0.341176 0.364706 0.011765 0.615686 0.607843 0.596078 2 56.1798 52.1978 Bs0.290196 0.25098 0.25098 0 0.717647 0.701961 0.698039 2 56.1798 41.7582 %_BS%_0.290196 0.25098 0.25098 0 0.717647 0.701961 0.698039 2 56.1798 41.7582 Bs0.615686 0.486274 0.458824 0.14902 0.403922 0.431373 0.447059 2 50 29.1209 %_BS%_0.615686 0.486274 0.458824 0.14902 0.403922 0.431373 0.447059 2 50 29.1209 Bs0.396078 0.329412 0.360784 0.007843 0.627451 0.619608 0.603922 2 50 16.4835 %_BS%_0.396078 0.329412 0.360784 0.007843 0.627451 0.619608 0.603922 2 50 16.4835 Bs0.427451 0.313725 0.282353 0.003922 0.6 0.627451 0.654902 2 50 2.1978 %_BS%_0.427451 0.313725 0.282353 0.003922 0.6 0.627451 0.654902 2 50 2.1978 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 436)(Unnamed gradient 436) 1 4 Bd[<04040404050506070708080909090A0A0A0B0C0C0C0D0D0E0E0F0F0F101112121313131414151516161617171919191A1A1B1B1C1D1D1E1E1F1F202020212122222424242525262727282829292A2A2A2B2B2C2D2E2E2E2E2E2F30313131323233333434353636373737383839393A3A3A3B3C3D3D3E3E3E3F3F404041414142424444444545464647474748484A4A4B4B4B4C4C4D4D4E4E4F505051515152525353545454555556565757>0<0B0C0E0E10111214141617191A1B1C1E1F20222324262728292B2C2D2F30313234353638393A3B3D3E3F414244454647494A4C4D4E50515254555758595B5C5D5E60616263646667686A6B6C6D6E70717273757678797A7C7D7F80828384858788898B8C8D8F90919294959697999A9C9D9E9FA1A2A3A4A6A7A8A9ABACADAEAFB0B1B2B3B4B5B6B8B9BABBBDBEBFC1C2C3C4C5C6C7C8C9C9CBCCCDCECFD0D1D2D4D5D6D7D8D9DADBDCDDDE>0<FAFAF9F9F8F8F7F7F7F6F6F5F5F4F4F4F3F3F2F2F2F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E4E4E4E3E3E2E2E1E1E1E0E0DFDFDEDEDEDDDDDCDCDCDBDBDADAD9D9D9D8D8D7D7D6D6D6D5D5D4D4D3D3D3D2D2D1D1D0D0D0CFCFCECECECDCDCCCCCBCBCBCACAC9C9C8C8C8C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C0C0C0BFBFBEBEBDBDBDBCBCBBBBBABABAB9B9B8B8B8B7B7B6B6B5B5B5B4B4B3B3B2B2><FFFFFFFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F1F1F1F1F1F1F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEBEAEAEAEAEAEAE9E9E9E9E9E8E8E8E8E8E7E7E7E7E7E7E6E6E6E6E6E5E5E5E5E5E4E4E4E4E4E4E3E3E3E3E3E2E2E2E2E2E1E1E1E1E1E1E0E0E0E0E0DFDFDF><F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A>4 %_Br<5758595B5C5D5E5F6061626465666768696A6B6C6D6E6F7071727375757778797A7B7D7E7F8081828385868788898A8B8C8D8E8F9091929495969798999B9C9D9E9FA0A1><000000000000000000000000000000000000000000000000000000000000000000000000010001020102030403040505060706070808090A090B0D0E0E0F111011131213><DEDFE0E0E2E3E5E5E7E8EAEBECEDEFEFF1F2F3F3F5F5F7F7F8F9FBFBFCFCFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101><B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979695949392918F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E><DFDEDEDDDCDCDBDADAD9D8D7D7D6D5D5D4D3D3D2D1D1D0CFCFCECDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C2C1C1C0BFBFBEBDBDBCBBBBBAB9B9B8B7B6B6B5B4B4B3B2B2B1><4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A2929>4 %_Br<A1A2A2A3A3A4A5A6A7A7A8A8A9AAABABACADAEAFB0B0B0B1B2B3B3B3B4B5><13151617181A1B1C1D1E1F212123242728292A2B2C2D2E2F303132343536>1<01010101010102020202020303040405050606070808090A0A0B0C0D0E0E><6E6D6C6C6B6A6968676766656463626261605F5E5D5D5C5B5A5958585756><B1B0AFAEADACABAAA9A8A7A6A5A4A3A1A09F9E9D9C9B9A99989796959493><29292828272727262626252524242423232322222121212020201F1F1E1E>4 %_Br[0.015686 0 0.043137 0 0.980392 1 0.956863 2 50 0 %_BS%_0.015686 0 0.043137 0 0.980392 1 0.956863 2 50 0 Bs0.341176 0 0.870588 0 0.698039 0.87451 0.290196 2 50 38.7978 %_BS%_0.341176 0 0.870588 0 0.698039 0.87451 0.290196 2 50 38.7978 Bs0.631373 0.07451 1 0.003922 0.431373 0.694118 0.160784 2 50 82.5137 %_BS%_0.631373 0.07451 1 0.003922 0.431373 0.694118 0.160784 2 50 82.5137 Bs0.709804 0.211765 1 0.054902 0.337255 0.576471 0.117647 2 50 100 %_BS%_0.709804 0.211765 1 0.054902 0.337255 0.576471 0.117647 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 534)(Unnamed gradient 534) 1 4 Bd[<04040404050506070708080909090A0A0A0B0C0C0C0D0D0E0E0F0F0F101112121313131414151516161617171919191A1A1B1B1C1D1D1E1E1F1F202020212122222424242525262727282829292A2A2A2B2B2C2D2E2E2E2E2E2F30313131323233333434353636373737383839393A3A3A3B3C3D3D3E3E3E3F3F404041414142424444444545464647474748484A4A4B4B4B4C4C4D4D4E4E4F505051515152525353545454555556565757>0<0B0C0E0E10111214141617191A1B1C1E1F20222324262728292B2C2D2F30313234353638393A3B3D3E3F414244454647494A4C4D4E50515254555758595B5C5D5E60616263646667686A6B6C6D6E70717273757678797A7C7D7F80828384858788898B8C8D8F90919294959697999A9C9D9E9FA1A2A3A4A6A7A8A9ABACADAEAFB0B1B2B3B4B5B6B8B9BABBBDBEBFC1C2C3C4C5C6C7C8C9C9CBCCCDCECFD0D1D2D4D5D6D7D8D9DADBDCDDDE>0<FAFAF9F9F8F8F7F7F7F6F6F5F5F4F4F4F3F3F2F2F2F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E4E4E4E3E3E2E2E1E1E1E0E0DFDFDEDEDEDDDDDCDCDCDBDBDADAD9D9D9D8D8D7D7D6D6D6D5D5D4D4D3D3D3D2D2D1D1D0D0D0CFCFCECECECDCDCCCCCBCBCBCACAC9C9C8C8C8C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C0C0C0BFBFBEBEBDBDBDBCBCBBBBBABABAB9B9B8B8B8B7B7B6B6B5B5B5B4B4B3B3B2B2><FFFFFFFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F1F1F1F1F1F1F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEBEAEAEAEAEAEAE9E9E9E9E9E8E8E8E8E8E7E7E7E7E7E7E6E6E6E6E6E5E5E5E5E5E4E4E4E4E4E4E3E3E3E3E3E2E2E2E2E2E1E1E1E1E1E1E0E0E0E0E0DFDFDF><F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A>4 %_Br<5758595B5C5D5E5F6061626465666768696A6B6C6D6E6F7071727375757778797A7B7D7E7F8081828385868788898A8B8C8D8E8F9091929495969798999B9C9D9E9FA0A1><000000000000000000000000000000000000000000000000000000000000000000000000010001020102030403040505060706070808090A090B0D0E0E0F111011131213><DEDFE0E0E2E3E5E5E7E8EAEBECEDEFEFF1F2F3F3F5F5F7F7F8F9FBFBFCFCFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101><B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979695949392918F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E><DFDEDEDDDCDCDBDADAD9D8D7D7D6D5D5D4D3D3D2D1D1D0CFCFCECDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C2C1C1C0BFBFBEBDBDBCBBBBBAB9B9B8B7B6B6B5B4B4B3B2B2B1><4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A2929>4 %_Br<A1A2A2A3A3A4A4A5A6A7A7A8A9A9A9AAABACACADAEAFAFAFB0B1B1B2B3B4B4B4B5B6B6B7B8B8B8B9BABABABBBBBCBCBDBD><13151617191A1B1C1D1E2021222325262728292A2B2C2E2F3032333435363738393A3B3C3D3E3F40414143434445464748>1<0101010101010202020202030304040405050606070808090A0B0C0D0E0F0F101112131415161718191B1C1D1E1F202223><6E6D6D6C6B6A6A696867676665646463626161605F5E5E5D5C5B5B5A595858575655555453525251504F4F4E4D4C4C4B4A><B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9997969594939291908F8E8D8C8B8A89888786858483828180><292928282827272727262626252525242424232323222222222121212020201F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1A1A>4 %_Br[0.015686 0 0.043137 0 0.980392 1 0.956863 2 50 0 %_BS%_0.015686 0 0.043137 0 0.980392 1 0.956863 2 50 0 Bs0.341176 0 0.870588 0 0.698039 0.87451 0.290196 2 50 38.7978 %_BS%_0.341176 0 0.870588 0 0.698039 0.87451 0.290196 2 50 38.7978 Bs0.631373 0.07451 1 0.003922 0.431373 0.694118 0.160784 2 50 82.5137 %_BS%_0.631373 0.07451 1 0.003922 0.431373 0.694118 0.160784 2 50 82.5137 Bs0.741176 0.282353 1 0.137255 0.290196 0.501961 0.101961 2 50 100 %_BS%_0.741176 0.282353 1 0.137255 0.290196 0.501961 0.101961 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 7)(Unnamed gradient 7) 1 4 Bd[<0708090A0A0B0C0D0E0F10111213141415161718191A1B1C1D1E1F202121232425262728292A2A2B2C2D2E2F30313233333536363738393A3B3C3D3D3E3F40414243444445464748494A4B4C4D4E4E4F5051525354545556575858595A5B5C5D5D5E5F6061616263646565676768696A6B6B6C6D6E6F6F70717273747575777878797A7B7B7C7D7E7F7F8081818283838485868687878889>0<0000000101010101020202020303030303040404040405050506060607070608080808080A090A0A0A0B0B0B0B0C0C0D0D0C0E0E0E0E0E10100F10111211111212121313121414141414151615151717161717181818181819191A19191B1B1A1A1C1C1B1C1C1D1D1D1D1D1E1F1F1F20202020202121222121232223232324242424252526262527272726262828272729292829292A2A2A>0<F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E><FDFDFCFCFCFCFBFBFBFBFAFAFAFAF9F9F9F9F8F8F8F8F7F7F7F7F6F6F6F6F5F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEEEDEDEDECECECECEBEBEBEBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1E1E0E0E0E0DFDFDFDFDEDEDEDDDDDDDDDCDCDCDCDBDBDBDBDADADADAD9D9D9D9D8D8D8D8D7D7D7D7D6D6><FFFFFFFEFEFEFEFEFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAF9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F5F4F4F4F4F4F3F3F3F3F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0EFEFEFEFEEEEEEEEEEEDEDEDEDEDECECECECECEBEBEBEBEAEAEAEAEAE9E9E9E9E9E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5E5E5E5E5E4E4E4E4E3E3E3E3E3E2E2E2E2E2E1E1E1E1E0E0E0E0E0DFDFDF>4 %_Br<898A8A8C8D8E8E8F90919293949596979798999A9B9C9C9D9D9E9FA0A0A1A1A3A3A5A5A6A7A8A9AAABABACACADAEAFB0B1B1B2B3B4B4B5B6B7B7B8B9BABABBBCBDBDBEBFC0C0C1C2C3><00000000000000000000000000000000000102030405060708090B0C0E0F1112141618191B1E1F2122242628292A2C2D2F3032333537383A3B3D3E404143444648494B4C4E4F515354><2A2A2A2A2B2A2B2A2B2B2A2B2C2B2B2C2B2C2B2B2C2B2C2C2B2C2D2C2D2E2D2E2D2E2E2E2E2E2D2E2F2E2E2E2E2F2E2F302F2F302F302F2F302F2F302F2F302F30302F302F2F302F30><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101><5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39><D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D><DFDEDEDDDCDCDBDBDAD9D9D8D7D7D6D5D5D4D4D3D2D2D1D0D0CFCECECDCCCCCBCBCAC9C9C8C7C7C6C5C5C4C4C3C2C2C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7B7B6B5B5B4B4B3B2B2B1>4 %_Br<C3C3C4C5C6C6C7C8C9C9CACBCCCDCECECFCFD0D0D1D2D3D3D4D5D6D6D7D8><545557585A5B5D5E60616364666769686A6B6C6E6F707273757677797A7C><3030313233343435363637373839393D3E3E3F4040414242434444454646><01010101010102020202020303030304040505060607080809090A0B0B0C><39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B><8D8C8B8A898887868584838281807F7F7E7D7C7B7A797877767574737271><B1B0AFAEADACABAAA9A8A7A6A5A4A3A1A09F9E9D9C9B9A99989796959493>4 %_Br[0.027451 0 0 0 0.960784 0.992157 1 2 50 0 %_BS%_0.027451 0 0 0 0.960784 0.992157 1 2 50 0 Bs0.537255 0 0.164706 0 0.368627 0.839216 0.87451 2 50 38.7978 %_BS%_0.537255 0 0.164706 0 0.368627 0.839216 0.87451 2 50 38.7978 Bs0.764706 0.329412 0.188235 0.003922 0.223529 0.552941 0.694118 2 50 82.5137 %_BS%_0.764706 0.329412 0.188235 0.003922 0.223529 0.552941 0.694118 2 50 82.5137 Bs0.847059 0.486274 0.27451 0.047059 0.168627 0.443137 0.576471 2 50 100 %_BS%_0.847059 0.486274 0.27451 0.047059 0.168627 0.443137 0.576471 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 86)(Unnamed gradient 86) 0 5 Bd[<B7B8B8B9B9B9BAB8B9B9BABABABBBBBBBCBCBCBDBDBCBCBCBDBDBDBEBCBCBDBDBDBDBCBCBCBCBDBDBDBDBDBEBEBEBEBEBEBEBEBFBFBFBF><A3A4A4A5A5A6A6A7A7A8A8A9A9A9A7A8A8A9A9A9AAABABABABACACACABABABACACACACACACADADADADABACACACACACACADADADADADADAD><98989999999A9A9A9B9B9B9C9C9C9F9F9FA0A0A0A1A1A1A1A2A2A2A2A5A5A5A5A5A6A6A6A6A6A7A7A7A9A9A9A9A9A9AAAAAAAAAAABABAB><8E919395979A9C9EA0A2A4A7A9ABACAFB1B3B5B7B9BABCBEC0C2C4C5C8C9CACBCCCDCFD0D2D3D4D6D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><3231302F2E2D2C2C2B2A292827262524232221201F1F1E1D1C1B1A19181716151413131211100F0E0D0C0B0A0908070606050403020100><34333231302F2E2D2C2B2A29282727262524232221201F1E1D1C1B1A191817161514131211100F0E0D0D0C0B0A09080706050403020100><37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br<9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9C9B9B9B9B9B9B9B9B9B9B9C9C9C9C9C9C9C9D9C9C9C9C9D9D9D9D9E9E9E9F9F9E9F9F9FA0A0A1A1A1A1A1A2A2A2A2A3A3A3A5A4A5A6A6A6A7A7A7A8A9AAA9A9AAABABACACADADAEAEAFAFB0B0B2B3B3B4B5B6B5B7B7><8585858585858585858585858585858585858585858585858585858585868686868686868686868685868686868686888787878789888888898989888A89898B8A8A8C8A8C8C8B8D8C8E8C8E8D8F8E8F909090929192949293959594959697989899999A9B9B9C9C9D9D9D9E9EA1A1A2A1A3A3><8484848484848484848484848484848484848484848484848484848484828484848484848484848484858585858585848585858584868686858787878587878688888788878789888A898B898B8A8C8B8C8C8C8B8D8E8C8E8E8D8D8F90908F8F90909191929393949495959696959696999798><38383838383838383838383838383838383838383838383838383838383839393939393939393939393B3B3B3B3B3B3C3D3D3D3D3D3E3E3E3F40404040414242434344454545474748494A4B4C4C4E4E5050525253555657595A5C5D5E6061636567696B6D6F717375777A7C7E818385898C8E><636363636363636363636363636363636363636363636363636363636362626262626262626262626161616161616160606060605F5F5F5F5E5E5E5D5D5D5C5C5C5B5B5A5A5A59595858575756565554545352525150504F4E4D4C4C4B4A494847464544434241403F3E3C3B3A393736353332><636363636363636363636363636363636363636363636363636363636362626262626262626262626261616161616160606060605F5F5F5F5E5E5E5E5D5D5D5C5C5C5B5B5A5A5A59595858575756565554545352525150504F4E4D4D4C4B4A494847464544434241403F3E3D3C3A3938373534><63636363636363636363636363636363636363636363636363636363636362626262626262626262626161616161616160606060605F5F5F5F5E5E5E5E5D5D5D5C5C5C5B5B5B5A5A5959585857575656555554545352525150504F4E4D4C4C4B4A494847464544434241403F3E3D3C3B393837>4 %_Br<B7B7B5B6B5B4B3B3B2B0B0AFAFAEAEADADACACABABAAA9A9AAA9A8A7A7A7A6A6A6A5A4A5A3A3A3A2A2A2A2A1A1A1A1A1A0A09F9F9F9E9F9F9E9E9E9D9D9D9D9C9C9C9C9D9C9C9C9C9C9C9C9B9B9B9B9B9B9B9B9B9B9C9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B><A3A3A1A2A1A19E9E9D9D9D9C9C9B9B9A999998989796959495959392949291929090908F8E8F8D8E8C8E8C8D8B8C8C8A8C8A8A8B89898A888989898888888987878787888686868686868586868686868686868686868585858585858585858585858585858585858585858585858585858585><989799969695969695959494939392919190908F8F90908F8D8D8E8E8C8E8D8B8C8C8C8B8C8A8B898B898A888987878887888886878785878787858686868485858585848585858585858484848484848484848484828484848484848484848484848484848484848484848484848484848484><8E8C898583817E7C7A777573716F6D6B6967656361605E5D5C5A5957565553525250504E4E4C4C4B4A49484747454545444343424241404040403F3E3E3E3D3D3D3D3D3C3B3B3B3B3B3B3939393939393939393939383838383838383838383838383838383838383838383838383838383838><3233353637393A3B3C3E3F404142434445464748494A4B4C4C4D4E4F50505152525354545556565757585859595A5A5A5B5B5C5C5C5D5D5D5E5E5E5F5F5F5F60606060606161616161616162626262626262626262626363636363636363636363636363636363636363636363636363636363><34353738393A3C3D3E3F404142434445464748494A4B4C4D4D4E4F50505152525354545556565757585859595A5A5A5B5B5C5C5C5D5D5D5E5E5E5E5F5F5F5F60606060606161616161616262626262626262626262626363636363636363636363636363636363636363636363636363636363><3738393B3C3D3E3F404142434445464748494A4B4C4C4D4E4F5050515252535454555556565757585859595A5A5B5B5B5C5C5C5D5D5D5E5E5E5E5F5F5F5F6060606060616161616161616262626262626262626262636363636363636363636363636363636363636363636363636363636363>4 %_Br<BFBFBFBFBEBEBFBEBEBEBEBEBDBDBEBEBEBDBCBCBDBDBDBDBDBCBEBEBCBCBCBDBDBDBCBCBCBCBBBDBBBBBABCBBBABBBBB9BABABAB9B9BAB9B8BAB8B9B8B9B9B9B8B8B8B8B8B7B7><ADADADADADADACACADADADADADADACACACABADACACACACACACADADADABABABACACABABA9ABABAAA9AAA9A9A8AAA8A7A9A8A7A6A8A6A5A7A5A7A6A4A6A4A5A5A5A4A4A4A4A4A3A3><ABABABAAAAAAAAAAA8A8A8A8A8A7A7A7A7A8A6A6A6A6A6A5A5A3A3A3A5A4A4A2A2A2A1A3A1A1A1A0A0A0A09F9D9F9F9C9E9E9E9B9D9D9B9D9A9A9C9A9C99999999999898989898><E6E5E4E3E2E0DFDEDDDCDBDAD9D8D7D6D4D4D3D2D0CFCDCCCBCAC9C8C8C6C5C4C2C0BEBEBCBAB8B7B6B4B2B1AFAEACABAAA8A6A4A4A2A09F9E9C9B9A9997959593939191918E8E><00010203040505060708090A0B0C0C0D0E0F1011111213141516161718191A1A1B1C1D1D1E1F2020212223232425252627272829292A2A2B2C2C2D2D2E2E2F2F30303131313232><00010203040506070708090A0B0C0D0E0F1010111213141516161718191A1B1B1C1D1E1F1F202122222324252526272728292A2A2B2C2C2D2D2E2F2F3030313132323333333434><000102030405060708090A0B0C0D0E0F10101112131415161718191A1A1B1C1D1E1F202021222324242526272828292A2A2B2C2D2D2E2F2F303131323233343435353636363737>4 %_Br[0.74902 0.678431 0.670588 0.901961 0 0 0 2 50 100 %_BS%_0.74902 0.678431 0.670588 0.901961 0 0 0 2 50 100 Bs0.717647 0.639216 0.596078 0.556863 0.196078 0.203922 0.215686 2 50 93 %_BS%_0.717647 0.639216 0.596078 0.556863 0.196078 0.203922 0.215686 2 50 93 Bs0.607843 0.521569 0.517647 0.219608 0.388235 0.388235 0.388235 2 81 50 %_BS%_0.607843 0.521569 0.517647 0.219608 0.388235 0.388235 0.388235 2 81 50 Bs0.717647 0.639216 0.596078 0.556863 0.196078 0.203922 0.215686 2 19 7 %_BS%_0.717647 0.639216 0.596078 0.556863 0.196078 0.203922 0.215686 2 19 7 Bs0.74902 0.678431 0.670588 0.901961 0 0 0 2 41.8182 0 %_BS%_0.74902 0.678431 0.670588 0.901961 0 0 0 2 41.8182 0 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp4 Bn%AI5_BeginGradient: (Linear Gradient 1)(Linear Gradient 1) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Linear Gradient 2)(Linear Gradient 2) 0 6 Bd[<C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADADADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDCDBDBDBDBDBDBDADBDBDADBDADADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6><3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E70727476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCFCFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7><232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>0<0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F10101111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F20202021212222232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F303031313232323333343435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242><A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110><C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2>4 %_Br<8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E101012121313161618181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C59575553514E4D4A484644413F3C3A373633312E2C29282523>0<737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F0F0E0E0D0C0C0B0B0A09090807070606050404030302010100><F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEEEDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBEBEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACACABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0><0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F404141424344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F60616263636465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6>4 %_Br<0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F303132343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282><444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18181515141212100F0F0C0C0B0909060606040402020100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>10<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473><BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDEDFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDEDEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8><00000000000101010101010101010102020202020202020203030303030303030304040404040404040404050505050505050505050606060606060606060707070707070707070708080808080808080808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F>4 %_Br0<9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444>101<7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF>04 %_Br0<FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDEDDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AEAEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E>101<000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F20212223242425262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F70707071717272727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F>04 %_Br[0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 Bs0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS%_0 0.992157 1 0 1 0 0 2 33.3333 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient 1)(Radial Gradient 1) 1 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[1 0 50 0 %_BS%_1 0 50 0 Bs0 0 50 100 %_BS%_0 0 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient 2)(Radial Gradient 2) 1 6 Bd[0<FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDEDDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AEAEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E>101<000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F20212223242425262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F70707071717272727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F>04 %_Br0<9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444>101<7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF>04 %_Br<0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F303132343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282><444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18181515141212100F0F0C0C0B0909060606040402020100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>10<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473><BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDEDFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDEDEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8><00000000000101010101010101010102020202020202020203030303030303030304040404040404040404050505050505050505050606060606060606060707070707070707070708080808080808080808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F>4 %_Br<8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E101012121313161618181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C59575553514E4D4A484644413F3C3A373633312E2C29282523>0<737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F0F0E0E0D0C0C0B0B0A09090807070606050404030302010100><F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEEEDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBEBEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACACABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0><0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F404141424344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F60616263636465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6>4 %_Br<C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADADADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDCDBDBDBDBDBDBDADBDBDADBDADADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6><3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E70727476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCFCFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7><232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>0<0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F10101111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F20202021212222232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F303031313232323333343435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242><A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110><C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2>4 %_Br[0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS%_0 0.992157 1 0 1 0 0 2 33.3333 0 Bs0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Offset Squares Pattern)(Offset Squares Pattern) 0 0 55.0781 55.0801 [%AI3_Tile(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR0 0 m0 55.0801 L55.0781 55.0801 L55.0781 0 L0 0 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa 0.043137 0 0.713725 0 1 1 0.4 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR26.1436 52.3262 m26.1436 29.4307 L3.03125 29.4307 L3.03125 52.3262 L26.1436 52.3262 Lf25.0264 50.123 m5.89063 50.123 L5.89063 32.4961 L25.0264 32.4961 L25.0264 50.123 Lf*U*u5.89063 50.123 m25.0264 50.123 L25.0264 32.4961 L5.89063 32.4961 L5.89063 50.123 Ln10.0313 34.2578 m24.1338 34.2578 L24.1338 48.3613 L10.0313 48.3613 L10.0313 34.2578 Ln*U%AI6_EndPatternLayer) &(0 O 0 R 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR22.4082 48.793 m8.30566 48.793 L8.30566 34.6895 L22.4082 34.6895 L22.4082 48.793 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 Xa 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR52.6943 24.7852 m52.6943 1.67578 L28.9355 1.67578 L28.9355 24.7852 L52.6943 24.7852 Lf47.6777 22.582 m30.0527 22.582 L30.0527 4.95703 L47.6777 4.95703 L47.6777 22.582 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR30.0527 22.582 m50.6982 22.582 L50.6982 4.95703 L30.0527 4.95703 L30.0527 22.582 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR47.4199 21.252 m32.2393 21.252 L32.2393 6.50293 L47.4199 6.50293 L47.4199 21.252 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR27.5391 27.5391 m27.5391 0 L0 0 L0 27.5391 L27.5391 27.5391 Lf25.4316 26.1445 m2.75293 26.1445 L2.75293 2.16992 L25.4316 2.16992 L25.4316 26.1445 Lf*U*u4.95605 7.40039 m22.582 7.40039 L22.582 25.0273 L4.95605 25.0273 L4.95605 7.40039 Ln*U%AI6_EndPatternLayer) &(0 O 0 R 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR22.582 5.67383 m4.95605 5.67383 L4.95605 25.0273 L22.582 25.0273 L22.582 5.67383 Lf20.3887 21.3281 m7.58105 21.3281 L7.58105 10.0313 L20.3887 10.0313 L20.3887 21.3281 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR6.93555 8.73633 m21.0371 8.73633 L21.0371 22.8379 L6.93555 22.8379 L6.93555 8.73633 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.623529 0 0.003922 0 0.2 0.776471 0.956863 Xa 0.623529 0 0.003922 0 0.2 0.776471 0.956863 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR55.0781 55.0801 m55.0781 27.5391 L27.5391 27.5391 L27.5391 55.0801 L55.0781 55.0801 Lf52.3252 50.9688 m30.292 50.9688 L30.292 28.9355 L52.3252 28.9355 L52.3252 50.9688 Lf*U*u30.292 50.9688 m52.3252 50.9688 L52.3252 28.9355 L30.292 28.9355 L30.292 50.9688 Ln32.4951 30.0527 m50.1221 30.0527 L50.1221 47.6777 L32.4951 47.6777 L32.4951 30.0527 Ln*U%AI6_EndPatternLayer) &(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa 0.043137 0 0.713725 0 1 1 0.4 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR50.1221 30.0527 m32.4951 30.0527 L32.4951 48.9727 L50.1221 48.9727 L50.1221 30.0527 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0 0.901961 0 0 1 0.2 0.6 Xa 0 0.901961 0 0 1 0.2 0.6 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR34.9063 33.749 m49.0078 33.749 L49.0078 47.8506 L34.9063 47.8506 L34.9063 33.749 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7790.8833 8590.9551 m-7699.0479 8590.9551 L-7699.0479 8586.6758 L-7790.8833 8586.6758 L-7790.8833 8590.9551 Ln0 O0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa-7790.6631 8588.2754 m-7791 8588.3418 -7790.4814 8588.5313 -7790.8833 8588.3887 C-7790.8379 8588.2705 -7790.7725 8588.1816 -7790.6631 8588.2754 Cf-7700.1675 8588.4414 m-7701.2529 8589.2041 -7702.6816 8588.4336 -7703.8701 8588.9199 C-7704.0098 8588.9521 -7703.8354 8588.502 -7704.1484 8588.6025 C-7705.3008 8589.1953 -7707.1162 8588.8418 -7708.5195 8588.3848 C-7708.4346 8588.2666 L-7708.7021 8588.1816 -7709.0283 8588.5723 -7709.3115 8588.5176 C-7709.3135 8588.4395 -7709.2207 8588.4063 -7709.2861 8588.2979 C-7709.3574 8588.5352 -7709.7979 8588.4082 -7709.9189 8588.584 C-7710.0303 8588.4922 -7710.0195 8588.3047 -7710.1641 8588.2002 C-7710.3262 8588.4697 L-7710.7769 8589.1094 -7711.4209 8588.4258 -7712.0361 8588.7559 C-7712.0063 8588.6934 -7711.9453 8588.6445 -7711.9941 8588.584 C-7712.9814 8588.9727 -7714.2168 8588.8994 -7715.3208 8589.043 C-7715.2769 8588.9482 -7715.2363 8588.7754 -7715.3008 8588.668 C-7715.3555 8588.9512 -7715.6963 8589.0225 -7715.9922 8589.0781 C-7716.1255 8588.7871 -7716.4995 8589.3438 -7716.8467 8589.1826 C-7716.8169 8589.1191 L-7717.0732 8589.4238 -7717.1973 8588.9434 -7717.4053 8589.3086 C-7717.5684 8589.0801 L-7717.6807 8589.4902 -7717.9395 8588.8672 -7718.1514 8589.0762 C-7718.1445 8589.1602 L-7718.3442 8589.2598 -7718.4482 8589.0537 -7718.6338 8589.123 C-7718.6514 8589.0762 L-7719.0854 8589.1826 -7719.3379 8588.9551 -7719.3271 8589.2754 C-7719.4795 8589.0186 -7718.9063 8589.1582 -7719.1455 8588.7842 C-7720.5732 8589.1152 -7722.0459 8589.0498 -7723.4834 8589.0566 C-7723.6465 8588.9277 -7723.7505 8588.8887 -7723.7871 8588.7666 C-7723.9307 8588.832 -7724.3281 8588.8262 -7724.4585 8588.9902 C-7724.4102 8588.9834 -7724.5513 8588.8262 -7724.6274 8588.8105 C-7724.8887 8588.6895 -7724.9131 8589.1621 -7725.2002 8589.0186 C-7725.0859 8588.9336 -7725.0469 8588.8301 -7725.0854 8588.7109 C-7725.3301 8588.9609 -7725.6577 8588.9209 -7725.9473 8589.002 C-7725.9023 8588.9482 -7725.8325 8588.916 -7725.8433 8588.8154 C-7726.1602 8589.0986 -7726.4209 8588.7559 -7726.6982 8588.9346 C-7726.5947 8588.75 L-7727.0415 8588.5254 -7726.7266 8589.1367 -7727.1128 8589.0039 C-7727.02 8588.9453 -7727.0527 8588.873 -7727.0361 8588.7979 C-7727.3965 8589.1338 -7727.9795 8589.0225 -7728.3389 8589.1367 C-7728.3174 8589.1113 -7728.3232 8589.0605 Y-7728.7148 8589.1025 -7729.1245 8588.998 -7729.5552 8589.1445 C-7729.7119 8589.0625 -7729.5039 8588.6934 -7729.9185 8588.7617 C-7729.9033 8589.1328 -7730.6221 8588.9141 -7730.3779 8589.334 C-7730.7319 8589.2734 -7731.2925 8589.1338 -7731.5283 8589.2598 C-7731.3691 8589.1191 -7731.7007 8588.8066 -7731.4063 8588.7754 C-7731.6289 8588.5498 L-7731.5957 8588.3984 -7731.3999 8588.6016 -7731.4707 8588.4102 C-7731.6182 8588.4258 -7732.0479 8588.5723 -7732.1797 8588.5117 C-7732.4531 8588.7393 -7732.7041 8589.1641 -7733.1465 8589.2109 C-7732.9385 8589.0664 -7733.2646 8588.8018 -7733.1235 8588.7383 C-7733.7407 8589.4482 L-7733.8877 8589.4658 -7733.7725 8589.1563 -7733.9854 8589.2529 C-7733.9746 8589.3506 -7734.0674 8589.4121 -7734.1318 8589.4922 C-7734.1875 8589.4482 -7734.7441 8589.584 -7734.8081 8589.2178 C-7734.8735 8589.0762 -7734.5684 8589.1426 -7734.7314 8589.0117 C-7735.0029 8589.0146 -7735.0151 8589.1406 -7735.2871 8589.1465 C-7735.2925 8589.0977 L-7735.4717 8589.043 -7735.8213 8589.2529 -7735.6265 8589.4551 C-7735.5015 8589.4658 -7735.6738 8589.2354 -7735.4888 8589.3418 C-7735.6152 8589.5537 -7735.9312 8589.6133 -7736.2031 8589.6162 C-7736.1104 8589.5586 -7736.1216 8589.4609 -7736.0845 8589.3574 C-7736.4497 8589.6445 -7736.8369 8589.7354 -7737.2451 8589.8555 C-7737.2515 8590.0293 -7737.0928 8589.5391 -7737.0327 8589.6309 C-7737.5557 8589.3896 -7738.1128 8589.9727 -7738.5479 8589.6201 C-7738.4766 8589.5898 -7738.5098 8589.8672 -7738.5146 8589.8184 C-7738.7666 8589.7969 -7738.7549 8589.5449 -7738.9189 8589.6377 C-7738.9355 8589.4902 -7739.1255 8589.6855 -7739.2944 8589.7305 C-7739.3818 8589.8369 -7739.3384 8589.6582 -7739.1914 8589.6426 C-7739.4268 8589.7666 -7740.3691 8589.9941 -7740.9131 8589.7793 C-7740.9023 8589.877 -7741.2471 8590.1377 -7741.3721 8590.127 C-7741.3232 8589.8984 L-7741.4375 8589.7617 -7741.7422 8589.918 -7741.7632 8589.7227 C-7742.0303 8590 -7740.7344 8589.4863 -7741.0957 8589.7002 C-7741.1895 8589.5098 -7741.5991 8590.0645 -7741.5215 8589.7529 C-7741.7725 8589.7617 -7742.0161 8590.0186 -7742.2559 8589.8047 C-7742.1865 8589.8418 -7742.0522 8589.4873 -7742.2549 8589.5039 C-7742.6123 8589.5449 -7742.3564 8589.6133 -7742.6465 8589.6895 C-7742.8281 8589.7832 L-7742.8398 8590.0059 -7743.1475 8589.7529 -7743.0146 8590.002 C-7743.0586 8589.8184 -7743.5337 8590.1152 -7743.4971 8589.7461 C-7743.4473 8589.4551 L-7743.6016 8589.4766 -7743.7002 8589.7617 -7743.8213 8589.8896 C-7743.8418 8589.8633 -7743.8823 8589.8047 -7743.8745 8589.7578 C-7743.8994 8590.2031 -7744.2432 8589.7207 -7744.4268 8590.0645 C-7744.7505 8589.9102 -7745.2495 8590.0498 -7745.4023 8589.7734 C-7745.6514 8589.9082 -7745.8784 8590.0674 -7746.1621 8589.9727 C-7746.1055 8589.9307 -7746.0283 8589.918 -7746.0122 8589.8223 C-7746.1904 8589.6914 -7746.2344 8589.8086 -7746.3975 8589.8809 C-7746.3608 8589.8145 -7746.7539 8589.6201 -7746.9521 8589.4629 C-7747.1992 8589.5957 -7747.1143 8589.8359 -7747.1392 8589.9824 C-7747.3652 8589.543 -7747.8379 8590.2656 -7748.1211 8589.8672 C-7748.0352 8589.8066 -7747.7598 8589.6514 -7747.9658 8589.541 C-7748.1919 8589.1025 -7748.4219 8589.8643 -7748.7861 8589.6543 C-7748.6968 8590.0186 L-7748.8594 8589.793 -7749.2334 8590.2305 -7749.1963 8589.8594 C-7749.3184 8589.9902 -7749.6265 8589.7383 -7749.5859 8590.0938 C-7750.1846 8589.793 -7751.0425 8590.2754 -7751.4102 8589.6377 C-7751.4961 8589.6973 -7751.7104 8589.6367 -7751.6665 8589.8193 C-7751.5239 8590.0176 -7751.4673 8589.6777 -7751.4141 8589.8125 C-7751.4912 8589.8232 -7751.5078 8589.9209 -7751.5161 8589.9697 C-7751.7021 8589.8887 -7751.8486 8589.8633 -7751.6729 8589.5674 C-7752.0869 8589.3477 -7752.1001 8590.1719 -7752.6274 8590.0322 C-7752.6035 8589.8857 -7752.6436 8589.8301 -7752.7979 8589.8535 C-7753.0903 8590.1055 L-7753.4312 8590.0469 -7753.2842 8589.7705 -7753.2925 8589.5215 C-7753.4746 8589.5645 -7753.6973 8589.5527 -7753.7803 8589.7383 C-7754.0015 8589.4258 L-7753.8398 8589.6514 -7754.1514 8589.5762 -7754.2368 8589.6367 C-7754.1514 8589.5762 L-7754.1846 8589.4697 -7754.3955 8589.5352 -7754.5024 8589.5664 C-7754.4766 8589.7207 -7754.2617 8589.7832 -7754.1445 8589.8281 C-7754.2373 8589.9375 -7754.3823 8589.9121 -7754.5059 8590.041 C-7754.4648 8589.7969 -7754.8027 8589.8672 -7754.9473 8589.8418 C-7755.1133 8589.7891 -7755.1348 8590.0605 -7755.1831 8590.0527 C-7755.1875 8589.9258 -7755.4541 8590.0313 -7755.3247 8589.8535 C-7755.2681 8589.8125 -7755.1953 8589.9766 -7755.1016 8589.8643 C-7755.2109 8589.7705 -7755.1982 8589.5498 -7755.4258 8589.7109 C-7755.5967 8589.832 -7755.3818 8590.1934 -7755.7061 8590.0391 C-7755.6211 8589.9785 -7755.6055 8589.8809 -7755.5391 8589.793 C-7755.8433 8589.666 L-7755.8564 8589.8887 L-7755.8975 8589.832 -7755.8691 8589.8125 -7755.8877 8589.7832 C-7755.9785 8590.0176 -7756.3521 8589.8555 -7756.4209 8590.1191 C-7756.5742 8590.1426 -7756.7441 8589.9648 -7756.8906 8589.9395 C-7756.8623 8589.9199 L-7757.0415 8589.7891 -7757.2793 8589.875 -7757.4297 8590.0254 C-7757.4219 8589.9766 L-7757.5195 8589.959 -7757.7505 8589.9941 -7757.8735 8590.125 C-7758.1201 8589.957 -7757.9561 8589.2842 -7758.2295 8589.5645 C-7758.48 8589.5723 -7758.6221 8589.9727 -7758.5215 8590.1152 C-7758.9717 8589.9648 -7759.4834 8590.3281 -7759.9009 8589.9824 C-7759.9658 8590.0723 -7759.9248 8590.1289 -7760.0586 8590.1816 C-7760.7197 8590.0938 -7761.4551 8590.4453 -7761.9814 8590.0078 C-7761.79 8589.9141 -7761.9688 8589.7842 -7761.9727 8589.6582 C-7762.1309 8589.8574 -7762.1631 8589.4512 -7762.2197 8589.793 C-7762.2041 8589.9941 -7762.2197 8590.0918 -7762.0337 8590.1729 C-7762.4282 8590.2813 -7763.0283 8590.2813 -7763.2471 8590.0938 C-7763.1377 8590.1865 -7763.2227 8590.248 -7763.3086 8590.3086 C-7763.2803 8589.9873 -7763.5713 8589.9395 -7763.7915 8590.0527 C-7763.8223 8590.248 L-7763.9658 8590.0469 L-7764.0503 8590.1094 -7764.0591 8590.457 -7764.2773 8590.2695 C-7764.2891 8590.1934 -7764.3018 8590.1162 -7764.3418 8590.0605 C-7764.5693 8590.2207 -7764.8906 8590.4922 -7765.1377 8590.3262 C-7765.3398 8590.041 L-7765.4453 8590.0723 -7765.6235 8590.2441 -7765.4375 8590.3262 C-7765.8594 8590.1543 -7766.1309 8590.1328 -7766.2646 8589.8857 C-7766.9912 8590.4873 -7768.0459 8590.5117 -7768.8906 8590.4688 C-7768.8652 8590.3223 L-7769.0923 8590.1855 -7768.9834 8590.5781 -7769.1416 8590.4766 C-7769.0684 8590.3369 -7769.3145 8590.1729 -7769.1362 8590.002 C-7769.4609 8589.8477 -7769.5547 8590.2559 -7769.7656 8590.3223 C-7769.7979 8590.5146 -7769.5957 8590.1992 -7769.6367 8590.4434 C-7769.6729 8590.5117 -7770.0859 8590.293 -7770.1362 8590.584 C-7770.2178 8590.4697 -7770.1543 8590.2559 -7770.1104 8590.1377 C-7770.3086 8590.2793 L-7770.5513 8589.9395 -7769.7559 8589.6719 -7770.0107 8589.2529 C-7770.1934 8589.2979 L-7770.3682 8588.9941 -7769.71 8588.9551 -7770.1689 8588.8506 C-7770.3682 8588.9941 -7770.5381 8589.416 -7770.3608 8589.5449 C-7770.7754 8589.625 -7770.5527 8590.2383 -7770.9985 8590.2139 C-7771.1201 8590.043 -7770.6416 8590.1729 -7770.7275 8589.9336 C-7770.9375 8589.6992 -7771.1484 8590.0645 -7771.3354 8589.9824 C-7771.1279 8590.0918 -7771.3032 8590.3857 -7771.4375 8590.4395 C-7771.6641 8590.3018 -7771.29 8590.1641 -7771.6113 8590.1338 C-7771.6641 8590.3018 -7771.9595 8590.4277 -7771.7041 8590.5449 C-7771.8203 8590.9258 -7772.0381 8590.4395 -7772.2129 8590.7344 C-7772.3174 8590.4658 -7771.8823 8590.1152 -7772.2354 8589.9814 C-7772.1792 8590.2393 -7772.6704 8590.332 -7772.4839 8590.7139 C-7772.6221 8590.6406 -7772.6367 8590.4375 -7772.5361 8590.2793 C-7772.7334 8590.1201 -7773.0151 8590.75 -7773.0801 8590.2383 C-7773.1479 8590.502 L-7773.21 8590.416 -7773.2983 8590.3506 -7773.3994 8590.209 C-7773.5732 8590.2041 -7773.96 8590.5664 -7773.9443 8590.168 C-7774 8590.209 -7774.3975 8590.1914 -7774.2441 8590.4658 C-7773.9971 8590.6338 -7773.96 8590.2656 -7773.8223 8590.6377 C-7773.9971 8590.334 -7774.1787 8590.6777 -7774.3213 8590.7793 C-7774.3447 8590.625 L-7774.4297 8590.6855 -7774.6255 8590.6514 -7774.6787 8590.8184 C-7774.6133 8590.7305 -7774.6475 8590.625 -7774.7148 8590.5879 C-7774.8042 8590.8223 L-7775.1494 8590.9395 -7774.8857 8590.4102 -7775.2217 8590.4785 C-7774.9663 8590.2969 L-7775.0225 8590.3359 -7775.1367 8590.1162 -7775.2979 8590.1895 C-7775.3604 8590.4033 -7775.4775 8590.6602 -7775.5313 8590.8262 C-7775.7207 8590.9199 -7775.6162 8590.585 -7775.8027 8590.8047 C-7775.5586 8590.5469 L-7775.5215 8590.4766 -7775.7231 8590.1934 -7775.9761 8590.1992 C-7776.1377 8590.2734 -7776.3887 8590.582 -7776.1338 8590.6992 C-7776.2607 8590.7031 -7776.4385 8590.5723 -7776.3379 8590.416 C-7776.6255 8590.4902 -7776.2998 8590.6465 -7776.5479 8590.7793 C-7776.6494 8590.6367 -7776.9658 8590.4336 -7777.1563 8590.2266 C-7776.8975 8589.8682 L-7777.0693 8589.8643 L-7776.8467 8589.5781 -7777.1826 8589.6465 -7777.0566 8589.3438 C-7777.1743 8589.2969 -7777.3169 8589.3994 -7777.4307 8589.4785 C-7777.0864 8589.9629 -7777.8159 8590.1406 -7777.7158 8590.582 C-7778.1875 8590.7031 -7778.0107 8589.5078 -7778.5024 8590.1992 C-7778.4219 8590.3145 -7778.6533 8590.6504 -7778.3564 8590.5225 C-7778.6494 8590.4746 -7778.5557 8590.9658 -7778.9014 8590.7832 C-7778.6455 8590.6016 -7779.1763 8590.3359 -7778.8066 8590.0723 C-7778.8311 8590.2178 -7778.6001 8590.1826 -7778.5435 8590.1426 C-7778.6641 8589.9727 -7778.5186 8589.6973 -7778.8184 8589.6973 C-7779.0015 8589.7393 -7779.2524 8589.748 -7779.2158 8589.9785 C-7779.2085 8590.2314 -7778.9365 8589.9512 -7779.0537 8590.207 C-7779.4185 8590.2949 -7779.4795 8589.9102 -7779.6304 8590.3594 C-7779.3999 8590.3232 -7779.3423 8590.584 -7779.3467 8590.7578 C-7779.6143 8590.8633 L-7779.5625 8590.6953 L-7779.9922 8590.5742 -7779.6895 8591 -7780.1055 8590.9551 C-7780.3008 8590.623 L-7780.2017 8590.3369 -7779.6953 8590.75 -7779.7695 8590.2842 C-7780.04 8590.2656 -7780.1299 8590.502 -7780.3848 8590.3818 C-7780.3281 8590.3418 -7780.2505 8590.3301 -7780.1943 8590.2891 C-7780.2915 8590.2734 -7780.3877 8589.6563 -7780.7734 8590.0176 C-7780.9727 8590.1582 -7780.8262 8590.1826 -7780.8311 8590.3574 C-7781.2656 8590.4102 -7781.3955 8590.5879 -7781.6753 8590.6152 C-7781.6177 8590.2754 -7782.1699 8590.582 -7781.8608 8590.2344 C-7781.7188 8590.4336 -7781.0903 8590.4141 -7780.9365 8590.0898 C-7781.0947 8589.6865 -7780.5952 8590.1465 -7780.5024 8589.7383 C-7780.8506 8589.7285 -7780.8335 8589.332 -7780.8896 8589.0723 C-7780.9863 8589.0537 -7781.0801 8589.1641 -7781.1377 8589.2041 C-7781.1787 8589.4482 -7781.0522 8589.4453 -7781.0449 8589.6973 C-7781.4336 8589.6309 -7781.8081 8589.7666 -7782.0225 8590.0059 C-7782.1523 8589.8848 -7782.1113 8589.6406 -7781.9575 8589.6162 C-7782.4199 8589.6895 -7782.9141 8589.6563 -7783.3535 8589.582 C-7783.0693 8589.9814 -7783.8433 8589.6758 -7783.6494 8590.0078 C-7783.4141 8590.0977 -7783.2119 8590.3818 -7783.3418 8590.5605 C-7783.4888 8590.5352 -7783.3369 8590.3857 -7783.3984 8590.3008 C-7783.5859 8590.5186 -7783.6895 8589.9512 -7783.8735 8590.2949 C-7783.4512 8590.166 -7783.7915 8589.8086 -7783.7139 8589.4961 C-7784.0186 8589.6719 -7783.7007 8589.2734 -7784.0024 8589.2734 C-7784.3057 8589.4473 -7784.6787 8589.584 -7785.0161 8589.6514 C-7785.4399 8589.3555 -7786.0898 8589.6465 -7786.4683 8589.6582 C-7786.6665 8589.5 -7786.5322 8589.1465 -7786.7471 8589.085 C-7786.9995 8589.0918 -7786.5601 8589.4658 -7786.9336 8589.3047 C-7786.8975 8589.2344 L-7787.0107 8589.3154 -7787.5825 8588.9941 -7787.6929 8589.502 C-7787.5776 8589.1191 L-7787.6475 8589.084 -7787.7119 8589.1719 -7787.7695 8589.2129 C-7787.7725 8589.0879 -7787.8535 8588.9746 -7787.7402 8588.8926 C-7787.9707 8588.6289 -7788.2241 8588.9346 -7788.4746 8588.9453 C-7788.3135 8589.1719 L-7788.7422 8589.3496 -7789.0293 8589.125 -7789.4443 8589.2041 C-7789.4316 8588.9824 L-7789.6787 8589.1152 L-7789.6182 8588.8994 -7789.8447 8588.7617 -7789.9751 8588.9414 C-7789.3335 8588.3984 L-7789.1553 8588.5293 -7789.5283 8588.666 -7789.4165 8588.8848 C-7789.3213 8589.0762 -7788.9375 8589.0146 -7788.8755 8588.8018 C-7789.0225 8588.7773 -7789.0293 8588.8262 -7789.1436 8588.9063 C-7789.1919 8588.5977 -7788.9688 8588.6094 -7788.8584 8588.4033 C-7788.9355 8588.416 -7789.0449 8588.3223 -7789.0615 8588.4199 C-7788.9102 8588.2695 -7788.7578 8588.2461 -7788.5059 8588.2383 C-7788.6763 8588.3594 -7788.4131 8588.4297 -7788.4775 8588.5176 C-7788.4575 8588.2461 -7788.2168 8588.1621 -7787.9053 8588.2383 C-7787.6831 8588.5527 -7787.3208 8588.0361 -7786.96 8588.123 C-7787.1064 8588.3984 -7787.2935 8588.6191 -7787.5127 8588.7305 C-7787.2861 8588.8682 -7787.2607 8588.7227 -7787.0337 8588.8613 C-7786.9238 8588.6563 -7786.8457 8588.3418 -7786.5503 8588.2168 C-7786.5342 8588.4199 L-7786.2666 8588.3154 -7786.2666 8588.0146 -7785.9258 8588.0723 C-7785.3418 8588.1719 -7784.7407 8588.1719 -7784.2949 8588.1973 C-7784.2783 8588.3994 L-7784.0303 8587.9658 -7783.4521 8588.2393 -7783.1182 8588.0469 C-7782.5503 8588.2422 -7781.8848 8587.8535 -7781.5938 8588.2031 C-7780.5913 8588.0469 -7779.7148 8587.8945 -7778.6768 8587.9688 C-7778.8516 8588.2637 L-7778.6655 8588.0469 -7778.7305 8588.4336 -7778.5479 8588.3896 C-7778.7578 8588.1543 -7778.2949 8588.084 -7778.1665 8587.9033 C-7777.7041 8588.1328 -7777.1104 8587.8818 -7776.7007 8587.6758 C-7776.6846 8587.8789 L-7776.2705 8587.498 -7775.7759 8587.832 -7775.2598 8587.8945 C-7775.2007 8587.9785 -7775.1074 8588.1689 -7774.9536 8588.1465 C-7774.6738 8587.8184 -7774.5273 8587.8418 -7774.1167 8587.6367 C-7773.8169 8587.6367 -7773.3301 8587.7178 -7773.0254 8587.8457 C-7771.8975 8587.3848 -7770.7456 8587.6797 -7769.5732 8587.4023 C-7769.4888 8587.6406 L-7768.3521 8587.1309 -7766.9541 8587.5938 -7765.9839 8587.332 C-7766.0776 8587.7393 L-7765.7734 8587.8643 -7765.3843 8587.6328 -7765.4619 8587.3438 C-7765.1567 8587.4688 -7764.7007 8587.1465 -7764.5068 8587.4814 C-7764.1953 8587.5566 -7764.1255 8587.293 -7763.8662 8587.2383 C-7763.2422 8587.3926 -7763.0107 8587.3574 -7762.4224 8587.2813 C-7762.5684 8587.2559 L-7762.6328 8587.3457 -7762.6387 8587.5186 -7762.4922 8587.5449 C-7762.2725 8587.4307 -7761.6846 8587.6543 -7761.9033 8587.168 C-7761.2754 8587.4482 -7760.4385 8586.9395 -7759.8271 8587.3184 C-7759.8789 8587.1855 -7759.7246 8587.1602 -7759.6602 8587.0703 C-7759.1089 8587.0645 -7758.5293 8587.3359 -7758.0898 8587.1094 C-7758.0024 8587.1758 -7758.2295 8587.3359 -7758.0049 8587.3496 C-7757.8721 8587.2979 -7758.0024 8587.1758 -7757.8384 8587.1016 C-7756.9453 8586.8535 -7756.0303 8587.3574 -7755.2188 8587.293 C-7753.7754 8587.0361 -7752.2695 8587.166 -7750.8867 8587.123 C-7750.9023 8587.2207 L-7750.4395 8586.8477 -7749.8159 8587.6025 -7749.4463 8587.041 C-7749.3369 8587.1338 -7749.0283 8587.085 -7749.1094 8587.2734 C-7748.7407 8587.0098 -7748.0771 8587.5215 -7747.5439 8587.1865 C-7747.5928 8587.1777 -7747.6211 8587.1973 -7747.6777 8587.2393 C-7747.1392 8587.4551 -7746.6641 8587.1602 -7746.0957 8587.3555 C-7746.1533 8587.3975 -7746.2583 8587.4277 -7746.2754 8587.5254 C-7746.0557 8587.7129 -7745.7549 8587.1133 -7745.6348 8587.584 C-7745.5088 8587.5801 -7745.5449 8587.3477 -7745.6221 8587.3613 C-7744.3779 8587.5449 -7743.0498 8587.2441 -7741.7549 8587.1367 C-7740.8271 8587.418 -7741.6982 8587.9297 -7740.9663 8587.5781 C-7740.9063 8587.6689 -7740.9229 8587.3984 -7740.9131 8587.4961 C-7740.6299 8587.3643 -7740.4717 8588.0215 -7740.2754 8587.7754 C-7740.3564 8587.4863 -7740.1445 8587.6133 -7740.1387 8587.4375 C-7739.5713 8587.625 -7739.4575 8587.8857 -7739.0098 8587.666 C-7739.0435 8587.8184 L-7738.5186 8587.3887 -7737.9102 8587.6191 -7737.4673 8587.123 C-7734.5728 8587.0322 -7731.7983 8586.7578 -7728.9761 8586.7002 C-7726.1865 8586.7949 -7723.4551 8586.5723 -7720.6221 8586.8359 C-7719.9585 8587.2354 -7719.9087 8587.2246 -7719.1797 8587.0625 C-7719.2095 8587.127 -7719.2549 8587.1426 -7719.2061 8587.2031 C-7719.1699 8586.875 -7718.6929 8587.1719 -7718.6235 8586.8594 C-7717.5762 8586.9199 -7716.6113 8586.8301 -7715.5337 8586.8281 C-7715.7041 8586.8633 -7715.7896 8587.1309 -7715.5869 8587.1094 C-7715.3755 8586.8994 L-7715.3408 8586.9922 L-7715.2021 8586.9434 -7715.0513 8586.7813 -7715.1943 8586.6758 C-7712.4873 8586.3926 -7709.8242 8587.0498 -7707.1729 8586.9697 C-7706.5439 8587.1064 -7705.6475 8586.9814 -7704.9629 8586.9141 C-7702.9355 8587.3506 -7701.1084 8587.7041 -7699.0479 8587.3984 C-7699.3174 8588.2461 -7700.1675 8588.4414 Vf-7790.2578 8588.2422 m-7790.1855 8588.4063 -7789.9497 8588.4961 -7790.1377 8588.7139 C-7790.1611 8588.5605 -7790.2822 8588.3887 -7790.2578 8588.2422 Cf-7783.9619 8589.9297 m-7783.9536 8589.8809 -7783.8721 8589.9961 -7783.8521 8590.0225 C-7783.9297 8590.0352 -7784.0024 8590.1729 -7784.0645 8590.0879 C-7783.9854 8590.0762 -7783.9976 8589.998 -7783.9619 8589.9297 Cf-7782.3521 8590.0273 m-7782.3765 8590.1729 -7782.7207 8590.2891 -7782.9238 8590.3066 C-7782.3521 8590.0273 Lf-7780.8521 8590.6289 m-7780.7227 8590.752 -7780.7583 8590.8193 -7780.9326 8590.8154 C-7780.9453 8590.7383 -7780.8877 8590.6992 -7780.8521 8590.6289 Cf-7780.7456 8590.2969 m-7780.6211 8590.293 -7780.5591 8590.3789 -7780.4985 8590.4629 C-7780.5029 8590.3369 -7780.7871 8590.541 -7780.7456 8590.2969 Cf-7777.4893 8590.7207 m-7777.4111 8590.709 -7777.2417 8590.5879 -7777.1689 8590.75 C-7777.2505 8590.6367 -7777.5498 8590.9346 -7777.4893 8590.7207 Cf-7775.9761 8590.5 m-7775.9272 8590.5098 -7775.9072 8590.5361 -7775.8506 8590.4961 C-7775.7607 8590.5625 -7775.8555 8590.6689 -7775.9312 8590.6826 C-7775.9761 8590.5 Lf-7748.4287 8589.9141 m-7748.5923 8589.9863 L-7748.5684 8589.8418 L-7748.4287 8589.9141 Lf-7736.3574 8589.9063 m-7736.1943 8589.8145 -7736.2441 8590.043 -7736.2168 8590.0645 C-7736.3643 8590.0801 -7736.1621 8589.8848 -7736.3574 8589.9063 Cf-7729.8486 8589.1777 m-7729.8984 8589.1816 L-7729.8818 8588.8818 L-7729.8486 8589.1777 LfU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 5 pt. Flat/ Adobe ArtOnPath Br) -(ush Tool/ Charcoal/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat/ / / / / 5 0.137255 0.121569 0.12549 /  ) -(1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.74902 0.678431 0.670588 0.901961 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.74902 0.678431 0.670588 0.901961 0 0 0 Xa(Black)Pc0 0.992157 1 0 1 0 0 Xa(RGB Red)Pc0.062745 0 0.964706 0 1 1 0 Xa(RGB Yellow)Pc0.627451 0 1 0 0 1 0 Xa(RGB Green)Pc0.517647 0 0.12549 0 0 1 1 Xa(RGB Cyan)Pc0.882353 0.768627 0 0 0 0 1 Xa(RGB Blue)Pc0.270588 0.815686 0 0 1 0 1 Xa(RGB Magenta)Pc0.168627 0.980392 0.92549 0.066667 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.003922 0.992157 0.972549 0 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.796078 0.968627 0 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0 0.34902 0.870588 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.047059 0 0.933333 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.745098 0 0.996078 0 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.862745 0.176471 1 0.039216 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.901961 0.333333 0.988235 0.258824 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.760784 0 0.74902 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.87451 0.52549 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.992157 0.964706 0.035294 0.003922 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262745 0.247059 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.34902 1 0.372549 0.109804 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.117647 1 0.494118 0.007843 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.968627 0.203922 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.227451 0.27451 0.4 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.4 0.427451 0.52549 0.066667 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.505882 0.529412 0.607843 0.235294 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.576471 0.603922 0.639216 0.419608 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.227451 0.384314 0.635294 0.011765 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.317647 0.490196 0.741176 0.098039 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.360784 0.572549 0.839216 0.227451 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.392157 0.639216 0.933333 0.356863 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415686 0.698039 0.968627 0.490196 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.478431 0.733333 0.835294 0.682353 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Linear Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient 1)PcBb0 0 0 0 Bh2 (Radial Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient 1)PcBb2 (Linear Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient 2)PcBb0 0 0 0 Bh2 (Radial Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient 2)Pc(Offset Squares Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Offset Squares Pattern)Pc0 g(K=100)Pc0.1 g(K=90)Pc0.2 g(K=80)Pc0.3 g(K=70)Pc0.4 g(K=60)Pc0.5 g(K=50)Pc0.6 g(K=40)Pc0.7 g(K=30)Pc0.8 g(K=20)Pc0.9 g(K=10)Pc0.95 g(R=241 G=241  B=242)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A1 Ap0 O0 J 0 j 1 w 4 M []0 d0 XR78.603 234.7637 m78.603 256.2676 176.2505 273.6982 296.6997 273.6982 c417.1504 273.6982 514.7969 256.2676 514.7969 234.7637 c514.7969 213.2598 417.1504 195.8301 296.6997 195.8301 c176.2505 195.8301 78.603 213.2598 78.603 234.7637 cBb-1.21728 38.935 90.3198 1 Bh1 (Unnamed gradient 1030) 1989.4561 -4560.9541 0 119.2515 1.8288 0 0 0.3265 -9798.7969 4062.123 Bg218.0871 0 0 -38.9356 296.7012 234.7637 Bmf0 BB0 Ap388.5288 233.0371 m323.9771 233.0371 L269.4126 233.0371 L204.8735 233.0371 L200.1851 233.0371 196.3687 236.8535 196.3687 241.543 C196.3687 340.4805 L193.1196 338.6016 189.4546 337.6152 185.6929 337.6152 c178.5259 337.6152 171.8735 341.1738 167.9009 347.1357 c164.7358 351.873 163.6099 357.5723 164.729 363.1729 c165.8452 368.7754 169.0747 373.6055 173.8149 376.7676 C291.9819 455.5869 L293.3833 456.5225 295.0132 457.0171 296.6968 457.0171 c298.3862 457.0171 300.019 456.5225 301.4175 455.5869 C325.9214 439.2412 L325.9214 444.4229 L325.9214 449.1128 329.7339 452.9253 334.4224 452.9253 C376.3618 452.9253 L381.0503 452.9253 384.8667 449.1128 384.8667 444.4229 C384.8667 399.9185 L419.5762 376.7676 L424.3262 373.5928 427.5566 368.7656 428.6738 363.1729 c429.7891 357.5742 428.6602 351.875 425.4922 347.1289 c421.5215 341.1699 414.8711 337.6152 407.7031 337.6152 c403.9434 337.6152 400.2827 338.6016 397.0337 340.4805 C397.0337 241.543 L397.0337 236.8535 393.2173 233.0371 388.5288 233.0371 C388.5288 233.0371 LBb1 (Unnamed gradient 157) 206.0635 228.3311 45 279.3569 1 0 0 1 0 0 Bg197.5351 197.5351 185.1833 -185.1833 113.5181 320.876 Xm5657.4854 5657.4854 185.1833 -185.1833 -5539.626 -5332.2676 Bc28.2193 28.2193 185.1833 -185.1833 117.8594 325.2178 Bm24.9633 24.9633 185.1833 -185.1833 146.0786 353.4365 Bm24.9631 24.9631 185.1833 -185.1833 171.042 378.4004 Bm20.6219 20.6219 185.1833 -185.1833 196.0054 403.3633 Bm44.4997 44.4997 185.1833 -185.1833 216.627 423.9849 Bm5.42669 5.42669 185.1833 -185.1833 261.127 468.4849 Bm19.5364 19.5364 185.1833 -185.1833 266.5537 473.9111 Bm24.9633 24.9633 185.1833 -185.1833 286.0898 493.4478 Bm5657.4854 5657.4854 185.1833 -185.1833 311.0532 518.4116 Bcf0 BB0 0 0 0 1 1 1 Xa323.9771 235.873 m388.5278 235.873 L391.6567 235.873 394.1987 238.4141 394.1987 241.543 C394.1987 345.7236 L397.4282 343.5684 L400.4868 341.5293 404.041 340.4512 407.7031 340.4512 c413.918 340.4512 419.6895 343.5371 423.1367 348.7031 c425.8828 352.8223 426.8594 357.7637 425.8906 362.6191 c424.9219 367.4736 422.123 371.6602 418.002 374.4102 C382.0308 398.4063 L382.0308 444.4229 L382.0308 447.5527 379.4917 450.0913 376.3618 450.0913 C334.4224 450.0913 L331.2935 450.0913 328.7544 447.5527 328.7544 444.4229 C328.7544 433.9438 L299.8423 453.23 L298.8911 453.8652 297.7935 454.1831 296.6978 454.1831 c295.6001 454.1831 294.5063 453.8652 293.5532 453.23 C175.3892 374.4102 L166.8892 368.7383 164.5854 357.2061 170.2583 348.7061 c173.7046 343.5371 179.4771 340.4512 185.6919 340.4512 c189.353 340.4512 192.9087 341.5293 195.9692 343.5684 C199.2026 345.7266 L199.2026 241.543 L199.2026 238.4141 201.7437 235.873 204.8726 235.873 C269.4126 235.873 L323.9771 235.873 Lf1 Ap376.3599 444.4229 m334.4224 444.4229 L334.4224 420.377 L376.3599 391.8848 L376.3599 444.4229 LBb0 0 0 0 Bh1 (Unnamed gradient 534) 389.3081 461.4033 -122.5565 102.822 1 0 0 1 0 0 Bg-55.3317 -86.6647 -86.6647 55.3317 389.3081 461.4033 Bmf0 BB0 Ap414.8574 369.6934 m296.6968 448.5137 L178.5376 369.6934 L172.6255 365.748 171.0317 357.7598 174.9741 351.8496 c177.4546 348.1309 181.5347 346.1211 185.6909 346.1211 c188.1431 346.1211 190.6255 346.8223 192.8208 348.2852 C296.6968 417.5815 L400.5728 348.2852 L402.7695 346.8223 405.25 346.1211 407.7031 346.1211 c411.8594 346.1211 415.9395 348.1309 418.4199 351.8496 c422.3633 357.7598 420.7695 365.748 414.8574 369.6934 CBb1 (Unnamed gradient 86) 310.8242 426.4297 -101.83 234.8103 1 0 0 1 0 0 Bg-48.1381 -229.823 -244.7598 51.2667 433.4121 400.7529 Xm-1665.3948 -7950.9995 -244.7598 51.2667 2098.8066 8351.752 Bc-3.36967 -16.0876 -244.7598 51.2667 433.4121 400.7529 Bm-20.6994 -98.8239 -244.7598 51.2667 430.042 384.665 Bm-20.6994 -98.8239 -244.7598 51.2667 409.3428 285.8418 Bm-3.36967 -16.0876 -244.7598 51.2667 388.6436 187.0176 Bm-1665.3948 -7950.9995 -244.7598 51.2667 385.2739 170.9297 Bcf0 BB204.8726 241.543 m204.8726 347.0547 L296.7339 407.2017 L388.5278 347.0547 L388.5278 241.543 L204.8726 241.543 LBb0 0 0 0 Bh1 (Unnamed gradient 534) 9385.8789 611.5347 -90 413.998 -1 0 0 1 25276.0703 0 Bg0.000018 -413.998 413.998 0.000018 308.1914 611.5347 Bmf0 BB296.6968 448.5137 m178.5376 369.6934 L172.6255 365.748 171.0317 357.7598 174.9741 351.8496 c177.4546 348.1309 181.5347 346.1211 185.6909 346.1211 c188.1431 346.1211 190.6255 346.8223 192.8208 348.2852 C296.6968 417.5815 L369.5923 368.9531 L380.6274 372.2051 391.8423 375.043 403.2188 377.4561 C296.6968 448.5137 LBb1 (Unnamed gradient 86) 353.9126 493.3052 -118.09 317.5034 1 0 0 1 0 0 Bg-149.499 -280.1044 -178.1347 95.0751 442.1748 446.1973 Xm-3805.2175 -7129.5352 -178.1347 95.0751 4247.3926 7575.7324 Bc-10.4649 -19.6073 -178.1347 95.0751 442.1748 446.1973 Bm-64.2846 -120.4449 -178.1347 95.0751 431.71 426.5898 Bm-64.2846 -120.4449 -178.1347 95.0751 367.4253 306.1455 Bm-10.4649 -19.6073 -178.1347 95.0751 303.1406 185.7002 Bm-3805.2175 -7129.5352 -178.1347 95.0751 292.6758 166.0928 Bcf0 BB296.7339 407.2017 m204.8726 347.0547 L204.8726 279.4063 L249.5669 317.7578 302.0728 347.4785 359.729 365.9238 C296.7339 407.2017 LBb0 0 0 0 Bh1 (Unnamed gradient 436) 9214.6699 516.6235 -42.9522 444.1419 -1 0 0 1 25276.0703 0 Bg-325.0775 -302.633 302.633 -325.0775 479.4004 516.6235 Bmf0 BBu294.2598 525.1079 m246.2686 554.5454 248.3486 587.9248 Y246.8975 554.1875 295.7744 526.3208 v327.8452 508.0347 341.6421 490.604 347.5732 478.6929 C348.0059 478.8584 348.2383 478.9575 Y368.2686 559.6978 262.7979 591.0645 V248.7012 594.3359 246.707 601.7139 Y217.4287 544.895 259.8262 502.0288 v294.8306 466.6396 332.2959 473.9595 344.2998 477.5884 C338.3164 489.4351 324.7783 506.3867 294.2598 525.1079 cBb0 0 0 0 Bh1 (Unnamed gradient 436) 9245.1914 639.1074 -134.114 233.3394 -0.9993 -0.0381 -0.0381 0.9993 25347.8047 678.3271 Bg155.9283 -173.5985 173.5985 155.9283 229.5723 615.4258 Bmf0 BB294.3135 525.1079 m271.04 539.3838 259.543 554.5864 253.8726 566.4595 c249.4097 575.063 246.2109 586.0396 246.7627 601.5474 C246.7236 601.6572 246.707 601.7192 Y217.4277 544.9004 259.8262 502.0342 v294.8809 466.5947 332.3965 473.9844 344.3433 477.6079 C338.355 489.4536 324.8154 506.397 294.3135 525.1079 cBb0 0 0 0 Bh1 (Unnamed gradient 534) 9226.9648 631.9683 -89.5743 164.4389 -0.9993 -0.0381 -0.0381 0.9993 25347.8047 678.3271 Bg-7.48585 -164.2727 164.2727 -7.48585 247.5137 607.5967 Bmf0 BB246.707 601.709 m246.7373 601.5996 248.8057 594.312 262.7979 591.0645 C360.5303 561.999 350.501 490.543 348.5039 480.2134 C349.8398 497.4453 348.6895 562.8745 259.0156 590.3027 C248.2842 593.1816 246.707 601.709 VBb0 0 0 0 Bh1 (Unnamed gradient 534) 9252.875 179.8447 -89.5743 147.3754 -0.9956 -0.0936 -0.0936 0.9956 25803.2793 1206.0244 Bg-14.8841 -146.6204 146.6204 -14.8841 256.1152 606.1357 Bmf0 BB/BBAccumRotation (0.093716) XT261.3213 506.002 m229.2041 538.4741 238.2158 578.9443 244.4756 596.666 C238.5293 581.8438 225.0049 537.2349 259.8262 502.0288 c294.8306 466.6396 332.2959 473.9595 344.2998 477.5884 C343.7954 478.5864 343.2393 479.6196 342.6226 480.6885 C328.0991 477.0645 293.6592 473.3081 261.3213 506.002 cBb1 (Unnamed gradient 13) 242.0298 557.4404 -39.7947 155.9061 1 0 0 1 0 0 Bg119.7893 -99.7859 -45.8756 -55.0719 263.6021 583.3369 Xm6192.27 -5158.2354 -45.8756 -55.0719 -5928.668 5741.5723 Bc119.7893 -99.7859 -45.8756 -55.0719 263.6021 583.3369 Bm6192.27 -5158.2354 -45.8756 -55.0719 383.3916 483.5508 Bcf0 BB354.8115 465.4668 m354.6621 496.7783 297.1494 527.4038 v247.4893 553.8477 248.3486 587.9248 Y247.0205 554.5073 295.6621 526.1572 v354.3311 491.9609 351.7998 462.7441 Y351.7041 461.3047 353.2207 461.2949 v354.6025 461.2241 354.7783 462.8184 v354.9561 464.4126 354.8115 465.4668 YBb1 (Unnamed gradient 13) 9266.6328 174.7598 -132.7094 242.8365 -0.9956 -0.0936 -0.0936 0.9956 25803.2793 1206.0244 Bg147.2847 -193.0689 43.4071 33.1136 220.4644 585.9771 Xm10338.2646 -13551.9648 43.4071 33.1136 -10117.8008 14137.9414 Bc147.2847 -193.0689 43.4071 33.1136 220.4644 585.9771 Bm10338.2646 -13551.9648 43.4071 33.1136 367.749 392.9082 Bcf0 BB/BBAccumRotation (0.127082) XT402.207 508.8618 m437.9805 530.8052 436.4307 555.6865 Y437.5117 530.5386 401.0781 509.7661 v377.1724 496.1353 366.8882 483.1421 362.4668 474.2637 C362.1445 474.3872 361.9712 474.4609 Y347.0405 534.646 425.6602 558.0273 V436.168 560.4658 437.6543 565.9653 Y459.4785 523.6118 427.875 491.6587 v401.7822 465.2793 373.855 470.7354 364.9072 473.4399 C369.3672 482.271 379.4585 494.9067 402.207 508.8618 cBb0 0 0 0 Bh1 (Unnamed gradient 436) 11835.9629 501.063 -134.114 173.935 0.9993 -0.0381 0.0381 0.9993 -11680.0225 678.3271 Bg-116.2316 -129.4032 -129.4032 116.2316 450.4287 576.186 Bmf0 BB402.168 508.8618 m419.5156 519.5034 428.0859 530.8359 432.3125 539.686 c435.6396 546.0991 438.0234 554.2813 437.6133 565.8413 C437.6416 565.9229 437.6543 565.9692 Y459.4795 523.6157 427.875 491.6626 v401.7441 465.2456 373.7798 470.7539 364.8745 473.4546 C369.3384 482.2847 379.4312 494.9146 402.168 508.8618 cBb0 0 0 0 Bh1 (Unnamed gradient 534) 11822.375 495.7407 -89.5743 122.5737 0.9993 -0.0381 0.0381 0.9993 -11680.0225 678.3271 Bg5.58 -122.4498 -122.4498 -5.58 437.0537 570.3496 Bmf0 BB437.6543 565.9614 m437.6309 565.8804 436.0898 560.4478 425.6602 558.0273 C352.8086 536.3613 360.2847 483.0967 361.7729 475.397 C360.7773 488.2417 361.6348 537.0137 428.4785 557.4595 C436.4785 559.605 437.6543 565.9614 VBb0 0 0 0 Bh1 (Unnamed gradient 534) 11839.0039 -100.3242 -89.5743 109.8549 0.9956 -0.0936 0.0936 0.9956 -12135.4971 1206.0244 Bg11.0947 -109.2921 -109.2921 -11.0947 430.6416 569.2617 Bmf0 BB/BBAccumRotation (0.093716) XT426.7598 494.6201 m450.7012 518.8257 443.9844 548.9927 439.3174 562.2026 C443.75 551.1538 453.832 517.9019 427.875 491.6587 c401.7822 465.2793 373.855 470.7354 364.9072 473.4399 C365.2832 474.1841 365.6978 474.9546 366.1572 475.751 C376.9834 473.0503 402.6553 470.2495 426.7598 494.6201 cBb1 (Unnamed gradient 13) -2355.3584 532.9639 -39.7947 116.2152 -1 0 0 1 13667.7822 0 Bg-89.2931 -74.3822 34.8477 -41.8334 424.7344 552.6587 Xm-4192.0425 -3492.022 34.8477 -41.8334 4616.7773 4044.6807 Bc-89.2931 -74.3822 34.8477 -41.8334 424.7344 552.6587 Bm-4192.0425 -3492.022 34.8477 -41.8334 335.4414 478.2764 Bcf0 BB357.0713 464.4048 m357.1826 487.7446 400.0537 510.5732 v437.0713 530.2856 436.4307 555.6865 Y437.4199 530.7769 401.1621 509.644 v357.4297 484.1538 359.3164 462.375 Y359.3877 461.3022 358.2573 461.2949 v357.2271 461.2422 357.0962 462.4302 v356.9639 463.6187 357.0713 464.4048 YBb1 (Unnamed gradient 13) 11849.2578 -104.1172 -132.7094 181.0127 0.9956 -0.0936 0.0936 0.9956 -12135.4971 1206.0244 Bg-109.7875 -143.9155 -33.1657 25.3008 457.6201 553.9238 Xm-11907.0469 -15608.4102 -33.1657 25.3008 12364.668 16162.334 Bc-109.7875 -143.9155 -33.1657 25.3008 457.6201 553.9238 Bm-11907.0469 -15608.4102 -33.1657 25.3008 347.8325 410.0083 Bcf0 BB/BBAccumRotation (0.127082) XTUu*u1 D0 0 0 0 1 1 1 Xa316.6021 326.9473 m320.7085 326.9473 324.0415 334.876 324.0415 344.6611 c324.0415 354.4473 320.7085 362.3789 316.6021 362.3789 c312.4937 362.3789 309.1597 354.4473 309.1597 344.6611 c309.1597 334.876 312.4937 326.9473 316.6021 326.9473 cf276.5669 326.9473 m280.6724 326.9473 284.0024 334.876 284.0024 344.6611 c284.0024 354.4473 280.6724 362.3789 276.5669 362.3789 c272.4565 362.3789 269.1226 354.4473 269.1226 344.6611 c269.1226 334.876 272.4565 326.9473 276.5669 326.9473 cf360.021 320.0508 m360.02 320.0488 L359.5454 320.6719 358.9761 321.2422 358.2954 321.7188 c356.7847 322.8359 355.0142 323.377 353.2612 323.373 c351.5708 323.373 349.8999 322.8779 348.4692 321.9258 c347.9058 321.5527 347.5952 320.9258 347.5952 320.2861 c347.5952 319.9258 347.6938 319.5527 347.9028 319.2227 C347.9302 319.168 347.9536 319.1406 347.9653 319.1211 C347.9683 319.124 L348.4712 318.5215 349.1255 318.5 349.6226 318.4863 c350.0913 318.4863 350.4673 318.5576 350.4849 318.5605 C350.5532 318.5781 351.6021 318.9277 352.9985 318.9248 c353.1821 318.9248 353.3696 318.9189 353.561 318.9053 C353.2944 288.8633 326.7808 264.5605 296.6499 264.5098 c266.5112 264.5605 240.0171 288.8584 239.7378 318.8965 C239.9653 318.916 240.188 318.9248 240.4019 318.9248 c241.7993 318.9248 242.8472 318.5693 242.853 318.5752 C242.937 318.5576 243.313 318.4863 243.7817 318.4863 c244.2769 318.501 244.9312 318.5215 245.3999 319.0742 C245.4116 319.1055 245.4419 319.1113 245.4917 319.2129 C245.7017 319.5488 245.8062 319.9219 245.8062 320.2891 c245.8062 320.9277 245.4985 321.5527 244.9341 321.9258 c243.5015 322.875 241.8257 323.373 240.1392 323.373 c238.3833 323.373 236.6128 322.8389 235.0933 321.7109 c234.4272 321.2422 233.854 320.6719 233.3794 320.0469 c232.2183 318.5371 231.6206 316.7002 231.6206 314.8496 c231.6206 314.0254 231.7378 313.1953 231.979 312.3867 c232.105 311.9443 232.439 311.5352 232.9614 311.5264 C233.5493 311.5439 233.896 312.0391 234.0278 312.6152 C234.5229 315.6094 235.6802 317.1563 236.9927 317.9961 C237.6772 285.6426 264.106 259.6074 296.6528 259.6074 c329.1987 259.6074 355.6587 285.6729 356.3169 318.0557 C357.6655 317.2285 358.8638 315.6875 359.3677 312.6523 C359.4985 312.0391 359.8481 311.5439 360.438 311.5264 C360.9614 311.5381 361.2905 311.9414 361.4243 312.3799 c361.6636 313.1924 361.7798 314.0225 361.7798 314.8457 c361.7798 316.7002 361.1831 318.5371 360.021 320.0508 Cf*UU1 Ap0 D505.7588 421.1641 m505.7588 431.7637 553.8896 440.3555 613.2607 440.3555 c672.6318 440.3555 720.7627 431.7637 720.7627 421.1641 c720.7627 410.5654 672.6318 401.9736 613.2607 401.9736 c553.8896 401.9736 505.7588 410.5654 505.7588 421.1641 cBb-0.600006 19.1913 90.3198 1 Bh1 (Unnamed gradient 1030) 2162.5537 -3990.0498 0 58.7798 1.8288 0 0 0.3265 -9798.7969 4062.123 Bg107.4965 0 0 -19.1916 613.2617 421.1641 Bmf0 BB0 Ap658.5244 420.314 m626.7061 420.314 L599.8105 420.314 L567.999 420.314 L565.6875 420.314 563.8066 422.1948 563.8066 424.5059 C563.8066 473.2739 L562.2051 472.3477 560.3984 471.8613 558.5439 471.8613 c555.0117 471.8613 551.7324 473.6152 549.7744 476.5537 c548.2148 478.8887 547.6592 481.6982 548.2109 484.459 c548.7607 487.2202 550.3525 489.6016 552.6895 491.1597 C610.9355 530.0107 L611.625 530.4717 612.4297 530.7148 613.2588 530.7148 c614.0918 530.7148 614.8965 530.4717 615.5869 530.0107 C627.6641 521.9531 L627.6641 524.5078 L627.6641 526.8193 629.543 528.6982 631.8545 528.6982 C652.5273 528.6982 L654.8379 528.6982 656.7188 526.8193 656.7188 524.5078 C656.7188 502.5708 L673.8271 491.1597 L676.1689 489.5947 677.7617 487.2158 678.3115 484.459 c678.8623 481.6992 678.3057 478.8896 676.7432 476.5503 c674.7871 473.6133 671.5078 471.8613 667.9756 471.8613 c666.1221 471.8613 664.3174 472.3477 662.7158 473.2739 C662.7158 424.5059 L662.7158 422.1948 660.835 420.314 658.5244 420.314 C658.5244 420.314 LBb1 (Unnamed gradient 157) 568.5859 417.9937 45 137.6975 1 0 0 1 0 0 Bg97.3668 97.3668 92.7139 -92.7139 522.251 464.3286 Xm5913.5298 5913.5298 92.7139 -92.7139 -5389.1392 -5447.0605 Bc13.9095 13.9095 92.7139 -92.7139 524.3906 466.4688 Bm12.3046 12.3046 92.7139 -92.7139 538.3008 480.3779 Bm12.3045 12.3045 92.7139 -92.7139 550.6055 492.6826 Bm10.1647 10.1647 92.7139 -92.7139 562.9092 504.9873 Bm21.9343 21.9343 92.7139 -92.7139 573.0742 515.1519 Bm2.67486 2.67486 92.7139 -92.7139 595.0088 537.0864 Bm9.62967 9.62967 92.7139 -92.7139 597.6836 539.7612 Bm12.3046 12.3046 92.7139 -92.7139 607.3135 549.3906 Bm5913.5298 5913.5298 92.7139 -92.7139 619.6172 561.6958 Bcf0 BB0 0 0 0 1 1 1 Xa626.7061 421.7109 m658.5234 421.7109 L660.0654 421.7109 661.3184 422.9629 661.3184 424.5063 C661.3184 475.8574 L662.9102 474.7954 L664.4189 473.79 666.1699 473.2588 667.9746 473.2588 c671.0381 473.2588 673.8838 474.7798 675.582 477.3262 c676.9355 479.3569 677.418 481.793 676.9404 484.1855 c676.4629 486.5781 675.083 488.6421 673.0518 489.9971 C655.3203 501.8257 L655.3203 524.5078 L655.3203 526.0498 654.0693 527.3018 652.5273 527.3018 C631.8545 527.3018 L630.3125 527.3018 629.0605 526.0498 629.0605 524.5078 C629.0605 519.3423 L614.8105 528.8486 L614.3408 529.1616 613.7998 529.3184 613.2598 529.3184 c612.7188 529.3184 612.1797 529.1616 611.709 528.8486 C553.4658 489.9971 L549.2764 487.2012 548.1396 481.5176 550.9365 477.3276 c552.6348 474.7798 555.4805 473.2588 558.5439 473.2588 c560.3486 473.2588 562.1006 473.79 563.6094 474.7954 C565.2031 475.8589 L565.2031 424.5063 L565.2031 422.9629 566.4561 421.7109 567.998 421.7109 C599.8105 421.7109 L626.7061 421.7109 Lf1 Ap652.5264 524.5078 m631.8545 524.5078 L631.8545 512.6553 L652.5264 498.6108 L652.5264 524.5078 LBb0 0 0 0 Bh1 (Unnamed gradient 1116) 671.957 556.8184 -124.5309 64.1779 1 0 0 1 0 0 Bg-36.3793 -52.8711 -52.8711 36.3793 671.957 556.8184 Bmf0 BB0 Ap671.501 487.6729 m613.2588 526.5244 L555.0176 487.6729 L552.1035 485.728 551.3174 481.79 553.2607 478.877 c554.4834 477.0439 556.4941 476.0537 558.543 476.0537 c559.752 476.0537 560.9756 476.3984 562.0576 477.1201 C613.2588 511.2773 L664.4609 477.1201 L665.543 476.3984 666.7666 476.0537 667.9756 476.0537 c670.0244 476.0537 672.0342 477.0439 673.2578 478.877 c675.2012 481.79 674.416 485.728 671.501 487.6729 CBb1 (Unnamed gradient 86) 620.2227 515.6387 -101.83 115.7419 1 0 0 1 0 0 Bg-23.7281 -113.2835 -122.6289 25.6855 681.6387 502.7744 Xm-1726.8781 -8244.5371 -122.6289 25.6855 2408.5166 8747.3115 Bc-1.66096 -7.92985 -122.6289 25.6855 681.6387 502.7744 Bm-10.2031 -48.7119 -122.6289 25.6855 679.9775 494.8447 Bm-10.2031 -48.7119 -122.6289 25.6855 669.7744 446.1328 Bm-1.66096 -7.92985 -122.6289 25.6855 659.5713 397.4209 Bm-1726.8781 -8244.5371 -122.6289 25.6855 657.9102 389.4912 Bcf0 BB567.998 424.5059 m567.998 476.5137 L613.2773 506.1606 L658.5234 476.5137 L658.5234 424.5059 L567.998 424.5059 LBb0 0 0 0 Bh1 (Unnamed gradient 1116) 9081.2891 658.1943 -90.2274 244.4683 -1 0 0 1 25276.0703 0 Bg0.970262 -244.4664 244.4664 0.970262 612.7813 658.1943 Bmf0 BB613.2588 526.5244 m555.0176 487.6729 L552.1035 485.728 551.3174 481.79 553.2607 478.877 c554.4834 477.0439 556.4941 476.0537 558.543 476.0537 c559.752 476.0537 560.9756 476.3984 562.0576 477.1201 C613.2588 511.2773 L649.1895 487.3076 L654.6299 488.9102 660.1563 490.3096 665.7646 491.499 C613.2588 526.5244 LBb1 (Unnamed gradient 86) 641.4619 548.6035 -118.09 156.5019 1 0 0 1 0 0 Bg-73.6902 -138.0674 -89.5933 47.8183 685.8613 524.9067 Xm-3956.4795 -7412.9424 -89.5933 47.8183 4642.3408 7937.8491 Bc-5.15831 -9.66472 -89.5933 47.8183 685.8613 524.9067 Bm-31.6868 -59.369 -89.5933 47.8183 680.7031 515.2422 Bm-31.6868 -59.369 -89.5933 47.8183 649.0166 455.873 Bm-5.15831 -9.66472 -89.5933 47.8183 617.3291 396.5039 Bm-3956.4795 -7412.9424 -89.5933 47.8183 612.1709 386.8389 Bcf0 BB613.2773 506.1606 m567.998 476.5137 L567.998 443.1689 L590.0283 462.0732 615.9092 476.7222 644.3281 485.8145 C613.2773 506.1606 LBb0 0 0 0 Bh1 (Unnamed gradient 1117) 8990.7539 560.0962 -42.9522 218.9234 -1 0 0 1 25276.0703 0 Bg-160.2349 -149.1717 149.1717 -160.2349 703.3164 560.0962 Bmf0 BBu612.0576 564.2778 m588.4023 578.7881 589.4277 595.2412 Y588.7129 578.6118 612.8047 564.8755 v628.6123 555.8623 635.4131 547.271 638.3369 541.3994 C638.5498 541.4814 638.665 541.5298 Y648.5381 581.3271 596.5498 596.7891 V589.6016 598.4014 588.6191 602.0371 Y574.1865 574.0313 595.085 552.9019 v612.3389 535.459 630.8057 539.0659 636.7236 540.8555 C633.7734 546.6943 627.1006 555.0498 612.0576 564.2778 cBb0 0 0 0 Bh1 (Unnamed gradient 436) 8894.6035 645.8398 -134.114 115.0145 -0.9993 -0.0381 -0.0381 0.9993 25347.8047 678.3271 Bg76.8581 -85.5679 85.5679 76.8581 580.1699 608.7959 Bmf0 BB612.084 564.2778 m600.6123 571.3145 594.9453 578.8081 592.1504 584.6611 c589.9512 588.9009 588.374 594.3115 588.6455 601.9561 C588.627 602.0098 588.6191 602.0405 Y574.1865 574.0342 595.085 552.9048 v612.3643 535.436 630.8555 539.0791 636.7451 540.8652 C633.793 546.7031 627.1191 555.0547 612.084 564.2778 cBb0 0 0 0 Bh1 (Unnamed gradient 534) 8885.6191 642.3213 -89.5743 81.0537 -0.9993 -0.0381 -0.0381 0.9993 25347.8047 678.3271 Bg-3.68986 -80.9718 80.9718 -3.68986 589.0156 604.9375 Bmf0 BB588.6191 602.0356 m588.6338 601.9814 589.6533 598.3892 596.5498 596.7891 C644.7236 582.4619 639.7803 547.2402 638.7949 542.1489 C639.4531 550.6426 638.8867 582.8931 594.6855 596.4131 C589.3965 597.832 588.6191 602.0356 VBb0 0 0 0 Bh1 (Unnamed gradient 534) 8917.0293 209.4922 -89.5743 72.6427 -0.9956 -0.0936 -0.0936 0.9956 25803.2793 1206.0244 Bg-7.33652 -72.2706 72.2706 -7.33652 593.2559 604.2183 Bmf0 BB/BBAccumRotation (0.093716) XT595.8223 554.8604 m579.9912 570.8662 584.4336 590.8145 587.5186 599.5498 C584.5879 592.2432 577.9219 570.2559 595.085 552.9019 c612.3389 535.459 630.8057 539.0659 636.7236 540.8555 C636.4746 541.3467 636.2012 541.8564 635.8965 542.3828 C628.7373 540.5972 611.7627 538.7451 595.8223 554.8604 cBb1 (Unnamed gradient 13) 586.3125 580.2148 -39.7947 76.8498 1 0 0 1 0 0 Bg59.047 -49.1869 -23.9102 -28.7033 597.5947 593.7588 Xm6447.748 -5371.0518 -23.9102 -28.7033 -5850.1533 5964.8105 Bc59.047 -49.1869 -23.9102 -28.7033 597.5947 593.7588 Bm6447.748 -5371.0518 -23.9102 -28.7033 656.6416 544.5718 Bcf0 BB641.9043 534.8804 m641.8311 550.3145 613.4824 565.4097 v589.0049 578.4443 589.4277 595.2412 Y588.7734 578.769 612.749 564.7949 v641.668 547.9395 640.4199 533.5381 Y640.3721 532.8291 641.1201 532.8242 v641.8008 532.7891 641.8877 533.5752 v641.9756 534.3604 641.9043 534.8804 YBb1 (Unnamed gradient 13) 8923.8125 206.9834 -132.7094 119.6953 -0.9956 -0.0936 -0.0936 0.9956 25803.2793 1206.0244 Bg72.5974 -95.1646 23.0081 17.552 574.8779 593.666 Xm10135.0645 -13285.5986 23.0081 17.552 -9560.1865 13879.2646 Bc72.5974 -95.1646 23.0081 17.552 574.8779 593.666 Bm10135.0645 -13285.5986 23.0081 17.552 647.4756 498.5015 Bcf0 BB/BBAccumRotation (0.127082) XT665.2666 556.2695 m682.8994 567.0859 682.1348 579.3501 Y682.668 566.9541 664.71 556.7158 v652.9268 549.9971 647.8574 543.5923 645.6777 539.2168 C645.5186 539.2773 645.4336 539.3135 Y638.0742 568.979 676.8262 580.5039 V682.0059 581.7061 682.7383 584.417 Y693.4961 563.5405 677.918 547.7905 v665.0566 534.7881 651.291 537.4771 646.8809 538.8105 C649.0791 543.1631 654.0527 549.3916 665.2666 556.2695 cBb0 0 0 0 Bh1 (Unnamed gradient 436) 12074.8965 505.2314 -134.114 85.7347 0.9993 -0.0381 0.0381 0.9993 -11680.0225 678.3271 Bg-57.292 -63.7844 -63.7844 57.292 689.0361 589.4551 Bmf0 BB665.2461 556.2695 m673.7979 561.5156 678.0225 567.1016 680.1055 571.4639 c681.7451 574.625 682.9209 578.6572 682.7178 584.3555 C682.7314 584.3965 682.7383 584.4189 Y693.4961 563.542 677.918 547.793 v665.0381 534.771 651.2539 537.4863 646.8643 538.8174 C649.0654 543.1699 654.04 549.3955 665.2461 556.2695 cBb0 0 0 0 Bh1 (Unnamed gradient 534) 12068.1992 502.6079 -89.5743 60.4184 0.9993 -0.0381 0.0381 0.9993 -11680.0225 678.3271 Bg2.75046 -60.3573 -60.3573 -2.75046 682.4424 586.5781 Bmf0 BB682.7383 584.4146 m682.7266 584.375 681.9678 581.6973 676.8262 580.5039 C640.917 569.8252 644.6016 543.5703 645.3359 539.7749 C644.8447 546.1064 645.2686 570.1465 678.2158 580.2236 C682.1592 581.2822 682.7383 584.4146 VBb0 0 0 0 Bh1 (Unnamed gradient 534) 12088.125 -106.8916 -89.5743 54.1476 0.9956 -0.0936 0.0936 0.9956 -12135.4971 1206.0244 Bg5.46861 -53.8702 -53.8702 -5.46861 679.2822 586.0405 Bmf0 BB/BBAccumRotation (0.093716) XT677.3682 549.25 m689.1689 561.1816 685.8584 576.0508 683.5576 582.562 C685.7432 577.1162 690.7129 560.7261 677.918 547.7905 c665.0566 534.7881 651.291 537.4771 646.8809 538.8105 C647.0664 539.1768 647.2705 539.5566 647.4961 539.9492 C652.833 538.6182 665.4873 537.2378 677.3682 549.25 cBb1 (Unnamed gradient 13) -2598.6738 568.1504 -39.7947 57.2827 -1 0 0 1 13667.7822 0 Bg-44.0127 -36.6631 18.4749 -22.1784 675.7207 578.6372 Xm-3998.3477 -3330.6714 18.4749 -22.1784 4674.0684 3909.3086 Bc-44.0127 -36.6631 18.4749 -22.1784 675.7207 578.6372 Bm-3998.3477 -3330.6714 18.4749 -22.1784 631.708 541.9741 Bcf0 BB643.0186 534.3569 m643.0723 545.8608 664.2051 557.1133 v682.4512 566.8301 682.1348 579.3501 Y682.623 567.0723 664.751 556.6558 v643.1953 544.0908 644.125 533.356 Y644.1602 532.8271 643.6035 532.8242 v643.0957 532.7979 643.0303 533.3838 v642.9648 533.9692 643.0186 534.3569 YBb1 (Unnamed gradient 13) 12093.1777 -108.7598 -132.7094 89.2221 0.9956 -0.0936 0.0936 0.9956 -12135.4971 1206.0244 Bg-54.1148 -70.9367 -17.9602 13.7011 693.3848 577.8667 Xm-12058.5107 -15806.9561 -17.9602 13.7011 12751.8945 16384.8223 Bc-54.1148 -70.9367 -17.9602 13.7011 693.3848 577.8667 Bm-12058.5107 -15806.9561 -17.9602 13.7011 639.2695 506.9302 Bcf0 BB/BBAccumRotation (0.127082) XTU*u1 D0 g623.0703 466.6025 m625.0947 466.6025 626.7373 470.5107 626.7373 475.334 c626.7373 480.1577 625.0947 484.0674 623.0703 484.0674 c621.0459 484.0674 619.4023 480.1577 619.4023 475.334 c619.4023 470.5107 621.0459 466.6025 623.0703 466.6025 cf0 g603.3369 466.6025 m605.3604 466.6025 607.002 470.5107 607.002 475.334 c607.002 480.1577 605.3604 484.0674 603.3369 484.0674 c601.3105 484.0674 599.668 480.1577 599.668 475.334 c599.668 470.5107 601.3105 466.6025 603.3369 466.6025 cf644.4727 463.2031 m644.4717 463.2026 L644.2383 463.5098 643.958 463.791 643.6211 464.0254 c642.877 464.5762 642.0039 464.8428 641.1406 464.8408 c640.3066 464.8408 639.4834 464.5967 638.7773 464.1274 c638.5 463.9434 638.3467 463.6348 638.3467 463.3193 c638.3467 463.1416 638.3965 462.958 638.499 462.7954 C638.5127 462.7686 638.5244 462.7549 638.5303 462.7451 C638.5313 462.7466 L638.7793 462.4492 639.1016 462.4395 639.3467 462.4321 c639.5781 462.4321 639.7637 462.4678 639.7715 462.4688 C639.8057 462.4775 640.3223 462.6499 641.0107 462.6484 c641.1016 462.6484 641.1943 462.6455 641.2881 462.6387 C641.1563 447.8306 628.0879 435.8516 613.2363 435.8271 c598.3809 435.8516 585.3203 447.8281 585.1836 462.6338 C585.2959 462.6436 585.4053 462.6484 585.5107 462.6484 c586.1992 462.6484 586.7158 462.4727 586.7188 462.4761 C586.7607 462.4678 586.9453 462.4321 587.1768 462.4321 c587.4209 462.4395 587.7432 462.4492 587.9746 462.7217 C587.9795 462.7373 587.9951 462.7402 588.0195 462.79 C588.123 462.9561 588.1748 463.1396 588.1748 463.3203 c588.1748 463.6357 588.0225 463.9434 587.7451 464.1274 c587.0391 464.5952 586.2129 464.8408 585.3809 464.8408 c584.5166 464.8408 583.6436 464.5771 582.8945 464.0215 c582.5664 463.79 582.2832 463.5098 582.0488 463.2017 c581.4775 462.457 581.1826 461.5518 581.1826 460.6396 c581.1826 460.2334 581.2402 459.8242 581.3584 459.4258 c581.4209 459.208 581.5859 459.0059 581.8428 459.002 C582.1328 459.0103 582.3037 459.2539 582.3691 459.5381 C582.6123 461.0146 583.1826 461.7764 583.8301 462.1909 C584.168 446.2432 597.1953 433.4106 613.2373 433.4106 c629.2793 433.4106 642.3213 446.2578 642.6465 462.2197 C643.3105 461.8125 643.9023 461.0527 644.1504 459.5566 C644.2148 459.2539 644.3867 459.0103 644.6777 459.002 C644.9355 459.0068 645.0986 459.2061 645.1641 459.4219 c645.2813 459.8228 645.3398 460.2319 645.3398 460.6377 c645.3398 461.5518 645.0449 462.457 644.4727 463.2031 CBb1 (Unnamed gradient 86) 613.2617 510.7622 -90 186.3985 1 0 0 1 0 0 Bg-0.000008 -186.3985 -68.1572 0.000003 647.3398 510.7622 Xm-0.000366 -8380.5664 -68.1572 0.000003 647.3398 8891.3281 Bc-0.000001 -13.0479 -68.1572 0.000003 647.3398 510.7622 Bm-0.000004 -80.1514 -68.1572 0.000003 647.3398 497.7144 Bm-0.000004 -80.1514 -68.1572 0.000003 647.3398 417.563 Bm-0.000001 -13.0479 -68.1572 0.000003 647.3398 337.4111 Bm-0.000366 -8380.5664 -68.1572 0.000003 647.3398 324.3633 Bcf0 BB*U1 Ap0 D505.7588 215.8438 m505.7588 226.4434 553.8896 235.0352 613.2607 235.0352 c672.6318 235.0352 720.7627 226.4434 720.7627 215.8438 c720.7627 205.2451 672.6318 196.6533 613.2607 196.6533 c553.8896 196.6533 505.7588 205.2451 505.7588 215.8438 cBb-0.600006 19.1913 90.3198 1 Bh1 (Unnamed gradient 1030) 2162.5537 -4618.9014 0 58.7798 1.8288 0 0 0.3265 -9798.7969 4062.123 Bg107.4965 0 0 -19.1916 613.2617 215.8438 Bmf0 BB0 Ap658.5244 214.9941 m626.7061 214.9941 L599.8105 214.9941 L567.999 214.9941 L565.6875 214.9941 563.8066 216.875 563.8066 219.1855 C563.8066 267.9531 L562.2051 267.0273 560.3984 266.541 558.5439 266.541 c555.0117 266.541 551.7324 268.2949 549.7744 271.2334 c548.2148 273.5684 547.6592 276.377 548.2109 279.1387 c548.7607 281.9004 550.3525 284.2803 552.6895 285.8389 C610.9355 324.6904 L611.625 325.1514 612.4297 325.3945 613.2588 325.3945 c614.0918 325.3945 614.8965 325.1514 615.5869 324.6904 C627.6641 316.6328 L627.6641 319.1875 L627.6641 321.499 629.543 323.3779 631.8545 323.3779 C652.5273 323.3779 L654.8379 323.3779 656.7188 321.499 656.7188 319.1875 C656.7188 297.25 L673.8271 285.8389 L676.1689 284.2744 677.7617 281.8955 678.3115 279.1387 c678.8623 276.3779 678.3057 273.5703 676.7432 271.2305 c674.7871 268.293 671.5078 266.541 667.9756 266.541 c666.1221 266.541 664.3174 267.0273 662.7158 267.9531 C662.7158 219.1855 L662.7158 216.875 660.835 214.9941 658.5244 214.9941 C658.5244 214.9941 LBb1 (Unnamed gradient 157) 568.585 212.6748 45 137.6974 1 0 0 1 0 0 Bg97.3668 97.3668 92.7125 -92.7125 522.252 259.0078 Xm5913.5298 5913.5298 92.7125 -92.7125 -5389.1382 -5652.3828 Bc13.9095 13.9095 92.7125 -92.7125 524.3916 261.1475 Bm12.3046 12.3046 92.7125 -92.7125 538.3018 275.0576 Bm12.3045 12.3045 92.7125 -92.7125 550.6064 287.3623 Bm10.1647 10.1647 92.7125 -92.7125 562.9102 299.666 Bm21.9343 21.9343 92.7125 -92.7125 573.0752 309.8311 Bm2.67486 2.67486 92.7125 -92.7125 595.0098 331.7656 Bm9.62967 9.62967 92.7125 -92.7125 597.6846 334.4404 Bm12.3046 12.3046 92.7125 -92.7125 607.3145 344.0703 Bm5913.5298 5913.5298 92.7125 -92.7125 619.6182 356.374 Bcf0 BB0 0 0 0 1 1 1 Xa626.7061 216.3906 m658.5234 216.3906 L660.0654 216.3906 661.3184 217.6426 661.3184 219.1855 C661.3184 270.5371 L662.9102 269.4746 L664.4189 268.4697 666.1699 267.9385 667.9746 267.9385 c671.0381 267.9385 673.8838 269.459 675.582 272.0059 c676.9355 274.0371 677.418 276.4727 676.9404 278.8652 c676.4629 281.2578 675.083 283.3223 673.0518 284.6777 C655.3203 296.5049 L655.3203 319.1875 L655.3203 320.7295 654.0693 321.9814 652.5273 321.9814 C631.8545 321.9814 L630.3125 321.9814 629.0605 320.7295 629.0605 319.1875 C629.0605 314.0215 L614.8105 323.5273 L614.3408 323.8418 613.7998 323.998 613.2598 323.998 c612.7188 323.998 612.1797 323.8418 611.709 323.5273 C553.4658 284.6777 L549.2764 281.8809 548.1396 276.1973 550.9365 272.0078 c552.6348 269.459 555.4805 267.9385 558.5439 267.9385 c560.3486 267.9385 562.1006 268.4697 563.6094 269.4746 C565.2031 270.5391 L565.2031 219.1855 L565.2031 217.6426 566.4561 216.3906 567.998 216.3906 C599.8105 216.3906 L626.7061 216.3906 Lf1 Ap652.5264 319.1875 m631.8545 319.1875 L631.8545 307.335 L652.5264 293.29 L652.5264 319.1875 LBb0 0 0 0 Bh1 (Unnamed gradient 10) 658.9092 327.5576 -122.5565 50.6838 1 0 0 1 0 0 Bg-27.2745 -42.7194 -42.7194 27.2745 658.9092 327.5576 Bmf0 BB0 Ap671.501 282.3525 m613.2588 321.2031 L555.0176 282.3525 L552.1035 280.4082 551.3174 276.4697 553.2607 273.5566 c554.4834 271.7236 556.4941 270.7334 558.543 270.7334 c559.752 270.7334 560.9756 271.0781 562.0576 271.8008 C613.2588 305.957 L664.4609 271.8008 L665.543 271.0781 666.7666 270.7334 667.9756 270.7334 c670.0244 270.7334 672.0342 271.7236 673.2578 273.5566 c675.2012 276.4697 674.416 280.4082 671.501 282.3525 CBb1 (Unnamed gradient 86) 620.2227 310.3174 -101.83 115.74 1 0 0 1 0 0 Bg-23.7277 -113.2817 -122.6299 25.6857 681.6396 297.4531 Xm-1726.8781 -8244.5361 -122.6299 25.6857 2408.5176 8541.9893 Bc-1.66094 -7.92972 -122.6299 25.6857 681.6396 297.4531 Bm-10.2029 -48.7111 -122.6299 25.6857 679.9785 289.5234 Bm-10.2029 -48.7111 -122.6299 25.6857 669.7754 240.8125 Bm-1.66094 -7.92972 -122.6299 25.6857 659.5732 192.1016 Bm-1726.8781 -8244.5361 -122.6299 25.6857 657.9121 184.1719 Bcf0 BB567.998 219.1855 m567.998 271.1934 L613.2773 300.8398 L658.5234 271.1934 L658.5234 219.1855 L567.998 219.1855 LBb0 0 0 0 Bh1 (Unnamed gradient 10) 9075.1445 401.5571 -90 204.063 -1 0 0 1 25276.0703 0 Bg0.000009 -204.063 204.063 0.000009 618.9258 401.5571 Bmf0 BB613.2588 321.2031 m555.0176 282.3525 L552.1035 280.4082 551.3174 276.4697 553.2607 273.5566 c554.4834 271.7236 556.4941 270.7334 558.543 270.7334 c559.752 270.7334 560.9756 271.0781 562.0576 271.8008 C613.2588 305.957 L649.1895 281.9863 L654.6299 283.5898 660.1563 284.9893 665.7646 286.1787 C613.2588 321.2031 LBb1 (Unnamed gradient 86) 641.4609 343.2813 -118.09 156.4987 1 0 0 1 0 0 Bg-73.6886 -138.0646 -89.5933 47.8183 685.8613 319.584 Xm-3956.4792 -7412.9424 -89.5933 47.8183 4642.3408 7732.5264 Bc-5.1582 -9.66452 -89.5933 47.8183 685.8613 319.584 Bm-31.6861 -59.3678 -89.5933 47.8183 680.7031 309.9199 Bm-31.6861 -59.3678 -89.5933 47.8183 649.0166 250.5518 Bm-5.1582 -9.66452 -89.5933 47.8183 617.3311 191.1836 Bm-3956.4792 -7412.9424 -89.5933 47.8183 612.1729 181.5195 Bcf0 BB613.2773 300.8398 m567.998 271.1934 L567.998 237.8486 L590.0283 256.7529 615.9092 271.4023 644.3281 280.4941 C613.2773 300.8398 LBb0 0 0 0 Bh1 (Unnamed gradient 7) 8990.7539 354.7744 -42.9522 218.9222 -1 0 0 1 25276.0703 0 Bg-160.2341 -149.1709 149.1709 -160.2341 703.3164 354.7744 Bmf0 BBu612.0576 358.957 m588.4023 373.4668 589.4277 389.9199 Y588.7129 373.291 612.8047 359.5547 v628.6123 350.541 635.4131 341.9502 638.3369 336.0791 C638.5498 336.1602 638.665 336.209 Y648.5381 376.0068 596.5498 391.4688 V589.6016 393.0811 588.6191 396.7178 Y574.1865 368.7109 595.085 347.582 v612.3389 330.1377 630.8057 333.7461 636.7236 335.5352 C633.7734 341.374 627.1006 349.7295 612.0576 358.957 cBb0 0 0 0 Bh1 (Unnamed gradient 436) 8886.7813 440.6753 -134.114 115.017 -0.9993 -0.0381 -0.0381 0.9993 25347.8047 678.3271 Bg76.8598 -85.5697 85.5697 76.8598 580.1699 403.4766 Bmf0 BB612.084 358.957 m600.6123 365.9941 594.9453 373.4883 592.1504 379.3398 c589.9512 383.5811 588.374 388.9912 588.6455 396.6357 C588.627 396.6895 588.6191 396.7197 Y574.1865 368.7139 595.085 347.584 v612.3643 330.1152 630.8555 333.7578 636.7451 335.5449 C633.793 341.3828 627.1191 349.7344 612.084 358.957 cBb0 0 0 0 Bh1 (Unnamed gradient 534) 8877.7969 437.1553 -89.5743 81.0537 -0.9993 -0.0381 -0.0381 0.9993 25347.8047 678.3271 Bg-3.68986 -80.9718 80.9718 -3.68986 589.0137 399.6167 Bmf0 BB588.6191 396.7148 m588.6338 396.6611 589.6533 393.0684 596.5498 391.4688 C644.7236 377.1416 639.7803 341.9199 638.7949 336.8281 C639.4531 345.3223 638.8867 377.5723 594.6855 391.0928 C589.3965 392.5117 588.6191 396.7148 VBb0 0 0 0 Bh1 (Unnamed gradient 534) 8897.8086 5.07031 -89.5743 72.6429 -0.9956 -0.0936 -0.0936 0.9956 25803.2793 1206.0244 Bg-7.33654 -72.2708 72.2708 -7.33654 593.2598 398.8965 Bmf0 BB/BBAccumRotation (0.093716) XT595.8223 349.54 m579.9912 365.5459 584.4336 385.4941 587.5186 394.2285 C584.5879 386.9229 577.9219 364.9355 595.085 347.582 c612.3389 330.1377 630.8057 333.7461 636.7236 335.5352 C636.4746 336.0264 636.2012 336.5361 635.8965 337.0625 C628.7373 335.2773 611.7627 333.4248 595.8223 349.54 cBb1 (Unnamed gradient 13) 586.3125 374.8945 -39.7947 76.8489 1 0 0 1 0 0 Bg59.0463 -49.1862 -23.9102 -28.7033 597.5947 388.4385 Xm6447.748 -5371.0513 -23.9102 -28.7033 -5850.1533 5759.4897 Bc59.0463 -49.1862 -23.9102 -28.7033 597.5947 388.4385 Bm6447.748 -5371.0513 -23.9102 -28.7033 656.6406 339.252 Bcf0 BB641.9043 329.5605 m641.8311 344.9941 613.4824 360.0898 v589.0049 373.124 589.4277 389.9199 Y588.7734 373.4492 612.749 359.4746 v641.668 342.6191 640.4199 328.2178 Y640.3721 327.5078 641.1201 327.5029 v641.8008 327.4688 641.8877 328.2539 v641.9756 329.04 641.9043 329.5605 YBb1 (Unnamed gradient 13) 8904.5918 2.56348 -132.7094 119.6953 -0.9956 -0.0936 -0.0936 0.9956 25803.2793 1206.0244 Bg72.5974 -95.1646 23.0077 17.5517 574.8789 388.3447 Xm10123.4063 -13270.3164 23.0077 17.5517 -9548.5273 13658.6611 Bc72.5974 -95.1646 23.0077 17.5517 574.8789 388.3447 Bm10123.4063 -13270.3164 23.0077 17.5517 647.4766 293.1797 Bcf0 BB/BBAccumRotation (0.127082) XT665.2666 350.9492 m682.8994 361.7656 682.1348 374.0293 Y682.668 361.6338 664.71 351.3955 v652.9268 344.6768 647.8574 338.2715 645.6777 333.8965 C645.5186 333.957 645.4336 333.9932 Y638.0742 363.6582 676.8262 375.1836 V682.0059 376.3857 682.7383 379.0967 Y693.4961 358.2197 677.918 342.4707 v665.0566 329.4668 651.291 332.1563 646.8809 333.4902 C649.0791 337.8428 654.0527 344.0713 665.2666 350.9492 cBb0 0 0 0 Bh1 (Unnamed gradient 436) 12067.0723 300.0654 -134.114 85.7353 0.9993 -0.0381 0.0381 0.9993 -11680.0225 678.3271 Bg-57.2924 -63.7849 -63.7849 57.2924 689.0342 384.1348 Bmf0 BB665.2461 350.9492 m673.7979 356.1953 678.0225 361.7813 680.1055 366.1426 c681.7451 369.3047 682.9209 373.3369 682.7178 379.0352 C682.7314 379.0762 682.7383 379.0986 Y693.4961 358.2217 677.918 342.4727 v665.0381 329.4512 651.2539 332.166 646.8643 333.4971 C649.0654 337.8496 654.04 344.0752 665.2461 350.9492 cBb0 0 0 0 Bh1 (Unnamed gradient 534) 12060.375 297.4414 -89.5743 60.4167 0.9993 -0.0381 0.0381 0.9993 -11680.0225 678.3271 Bg2.75038 -60.3556 -60.3556 -2.75038 682.4404 381.2578 Bmf0 BB682.7383 379.0938 m682.7266 379.0547 681.9678 376.377 676.8262 375.1836 C640.917 364.5039 644.6016 338.25 645.3359 334.4541 C644.8447 340.7861 645.2686 364.8262 678.2158 374.9033 C682.1592 375.9619 682.7383 379.0938 VBb0 0 0 0 Bh1 (Unnamed gradient 534) 12068.9063 -311.3125 -89.5743 54.1476 0.9956 -0.0936 0.0936 0.9956 -12135.4971 1206.0244 Bg5.46861 -53.8702 -53.8702 -5.46861 679.2803 380.7207 Bmf0 BB/BBAccumRotation (0.093716) XT677.3682 343.9297 m689.1689 355.8613 685.8584 370.7305 683.5576 377.2422 C685.7432 371.7959 690.7129 355.4063 677.918 342.4707 c665.0566 329.4668 651.291 332.1563 646.8809 333.4902 C647.0664 333.8564 647.2705 334.2363 647.4961 334.6289 C652.833 333.2979 665.4873 331.918 677.3682 343.9297 cBb1 (Unnamed gradient 13) -2598.6743 362.8311 -39.7947 57.2837 -1 0 0 1 13667.7822 0 Bg-44.0135 -36.6638 18.4761 -22.1799 675.7217 373.3174 Xm-3998.3467 -3330.6704 18.4761 -22.1799 4674.0684 3703.9878 Bc-44.0135 -36.6638 18.4761 -22.1799 675.7217 373.3174 Bm-3998.3467 -3330.6704 18.4761 -22.1799 631.708 336.6533 Bcf0 BB643.0186 329.0371 m643.0723 340.541 664.2051 351.793 v682.4512 361.5098 682.1348 374.0293 Y682.623 361.752 664.751 351.3359 v643.1953 338.7715 644.125 328.0352 Y644.1602 327.5068 643.6035 327.5029 v643.0957 327.4775 643.0303 328.0635 v642.9648 328.6484 643.0186 329.0371 YBb1 (Unnamed gradient 13) 12073.9609 -313.1826 -132.7094 89.2206 0.9956 -0.0936 0.0936 0.9956 -12135.4971 1206.0244 Bg-54.1139 -70.9355 -17.961 13.7017 693.3857 372.5459 Xm-12046.8555 -15791.6787 -17.961 13.7017 12740.2422 16164.2246 Bc-54.1139 -70.9355 -17.961 13.7017 693.3857 372.5459 Bm-12046.8555 -15791.6787 -17.961 13.7017 639.2715 301.6104 Bcf0 BB/BBAccumRotation (0.127082) XTU*u1 D0 0 0 0 1 1 1 Xa623.0703 261.2822 m625.0947 261.2822 626.7373 265.1904 626.7373 270.0137 c626.7373 274.8379 625.0947 278.7471 623.0703 278.7471 c621.0459 278.7471 619.4023 274.8379 619.4023 270.0137 c619.4023 265.1904 621.0459 261.2822 623.0703 261.2822 cf603.3369 261.2822 m605.3604 261.2822 607.002 265.1904 607.002 270.0137 c607.002 274.8379 605.3604 278.7471 603.3369 278.7471 c601.3105 278.7471 599.668 274.8379 599.668 270.0137 c599.668 265.1904 601.3105 261.2822 603.3369 261.2822 cf644.4727 257.8828 m644.4717 257.8818 L644.2383 258.1895 643.958 258.4697 643.6211 258.7051 c642.877 259.2559 642.0039 259.5225 641.1406 259.5205 c640.3066 259.5205 639.4834 259.2773 638.7773 258.8066 c638.5 258.623 638.3467 258.3145 638.3467 257.999 c638.3467 257.8213 638.3965 257.6377 638.499 257.4746 C638.5127 257.4473 638.5244 257.4336 638.5303 257.4248 C638.5313 257.4258 L638.7793 257.1289 639.1016 257.1191 639.3467 257.1113 c639.5781 257.1113 639.7637 257.1465 639.7715 257.1484 C639.8057 257.1572 640.3223 257.3291 641.0107 257.3281 c641.1016 257.3281 641.1943 257.3252 641.2881 257.3184 C641.1563 242.5098 628.0879 230.5313 613.2363 230.5068 c598.3809 230.5313 585.3203 242.5078 585.1836 257.3135 C585.2959 257.3232 585.4053 257.3281 585.5107 257.3281 c586.1992 257.3281 586.7158 257.1523 586.7188 257.1563 C586.7607 257.1465 586.9453 257.1113 587.1768 257.1113 c587.4209 257.1191 587.7432 257.1289 587.9746 257.4014 C587.9795 257.417 587.9951 257.4199 588.0195 257.4697 C588.123 257.6357 588.1748 257.8193 588.1748 258 c588.1748 258.3154 588.0225 258.623 587.7451 258.8066 c587.0391 259.2754 586.2129 259.5205 585.3809 259.5205 c584.5166 259.5205 583.6436 259.2568 582.8945 258.7012 c582.5664 258.4697 582.2832 258.1885 582.0488 257.8809 c581.4775 257.1367 581.1826 256.2314 581.1826 255.3193 c581.1826 254.9121 581.2402 254.5039 581.3584 254.1055 c581.4209 253.8867 581.5859 253.6855 581.8428 253.6816 C582.1328 253.6895 582.3037 253.9346 582.3691 254.2178 C582.6123 255.6934 583.1826 256.4561 583.8301 256.8701 C584.168 240.9229 597.1953 228.0898 613.2373 228.0898 c629.2793 228.0898 642.3213 240.9375 642.6465 256.8994 C643.3105 256.4922 643.9023 255.7324 644.1504 254.2363 C644.2148 253.9346 644.3867 253.6895 644.6777 253.6816 C644.9355 253.6875 645.0986 253.8857 645.1641 254.1016 c645.2813 254.502 645.3398 254.9121 645.3398 255.3174 c645.3398 256.2314 645.0449 257.1367 644.4727 257.8828 Cf*ULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF